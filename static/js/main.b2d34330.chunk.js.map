{"version":3,"sources":["components/App.module.css","Utils.ts","components/ErrorBoundary.tsx","core/model-utils.ts","URLUtils.ts","constants.ts","core/ApiService.ts","core/tcomb-types.ts","core/user-model.ts","core/trackers/tracker-utils.ts","core/trackers/MetrikaTracker.ts","core/trackers/PosthogTracker.ts","core/trackers/LocalTracker.ts","core/trackers/VkPixelTracker.ts","core/trackers/GoogleAnalyticsTracker.ts","core/trackers/MixpanelTracker.ts","core/trackers/trackers.ts","components/AppService.ts","core/components/WithUser/WithUser.tsx","models/question-model.ts","models/game-model.ts","components/panels/BattleService.ts","components/helpers/BackButton.tsx","components/helpers/PanelHeader.tsx","components/helpers/Loader.tsx","core/hooks/use-feature-flag.ts","core/feature-flags.ts","components/panels/Home.tsx","components/QuestionService.ts","components/Question.tsx","components/panels/battle-reducer.ts","components/panels/Battle.tsx","components/helpers/HomeButton.tsx","components/panels/SingleplayerResults.tsx","models/scoreboard-user-model.ts","components/panels/ScoreboardItem.tsx","components/panels/ScoreboardHome.tsx","components/panels/ChooseGameType.tsx","components/panels/Lobby/Lobby.tsx","models/game-definition-model.ts","components/panels/ChooseMultiplayerGameAction/ChooseMultiplayerGameAction.tsx","components/panels/JoinMultiplayerGame/JoinMultiplayerGame.tsx","components/panels/MultiplayerResults/MultiplayerResults.tsx","components/App.tsx","core/hooks/use-state-ref.ts","core/FeatureFlagService.ts","core/components/FeatureFlagProvider/FeatureFlagProvider.tsx","components/AppWrapper.tsx","index.tsx","components/panels/MultiplayerResults/MultiplayerResults.module.css"],"names":["module","exports","Utils","time","Promise","res","setTimeout","timestamp","now","Date","getTime","diff","waitForTimeout","resolve","isProductionMode","process","ErrorBoundary","children","fallback","error","componentStack","resetError","message","onClick","getFromObject","Model","object","fromJSON","set","key","value","this","constructor","update","$set","models","Map","createModel","attributes","name","defaultProps","struct","fromObject","prototype","GameModes","URLUtils","URLSearchParams","window","location","search","get","hash","slice","API_HOST","websocketProtocol","includes","INTERNAL_SERVER_ERROR","websocketCloseCodeToError","3000","frontendWebsocketCloseCodes","ApiService","url","data","sendToken","expand","send","convertDataToBackendFormat","method","urlParams","expandString","castArray","join","append","options","headers","createHeaders","mode","body","JSON","stringify","timeout","fetch","createFullApiURL","response","processResponse","onMessage","onOpen","onClose","onError","customEventListeners","fullUrl","createFullSocketURL","throwOnClose","e","userFriendlyMessage","code","console","Error","socket","WebSocket","addEventListener","event","inputData","parse","parsedInstance","instance","modelName","upperFirst","camelCase","has","getModelByName","model","convertDataToFrontendFormat","parsedData","eventName","type","hasCustomListener","Object","hasOwnProperty","call","props","originalClose","close","removeEventListener","args","apply","sendJson","sendEvent","pickBy","jsonSocket","authorization","getAuthorizationHeader","Accept","Authorization","getSearchParam","getFakeVKIDAuthHeader","getQueryStringAuthHeader","queryString","fakeVkID","relativeUrl","queryParams","createFullUrl","fullRelativeUrl","domain","removeTrailingSlash","indexOf","String","status","json","ok","detail","toSnake","camelCased","toCamel","endsWith","Null","irreducible","PositiveNumber","refinement","tcomb","Number","n","ID","NOTIFICATIONS_STATUSES","ALLOW","BLOCK","TO_BE_REQUESTED","GAME_TYPES","User","id","vkId","firstName","lastName","photoUrl","score","monthlyScore","foreverRank","monthlyRank","notificationsStatus","enums","of","values","createTracker","tracker","AUTOMATIC_OPERATIONS","METRIKA_ID","MetrikaTracker","init","m","t","r","i","k","a","push","arguments","l","createElement","getElementsByTagName","async","src","parentNode","insertBefore","document","ym","clickmap","trackLinks","accurateTrackBounce","webvisor","log","warn","identify","UserID","reachGoal","params","initPromise","waitForInit","PosthogTracker","posthog","autocapture","loaded","userParams","getHashParam","people","set_once","register_once","capture","LocalTracker","VkPixelTracker","vkOpenApiScript","onload","VK","Retargeting","Init","Hit","head","appendChild","Goal","GOOGLE_ANALYTICS_ID","GoogleAnalyticsTracker","script","setAttribute","gtag","dataLayer","utmSource","param","MixpanelTracker","mixpanel","track","registeredTrackers","forEach","trackers","AppService","patch","areNotificationsEnabledOnVkSide","allowNotifications","bridge","result","error_type","error_data","error_code","error_reason","blockNotifications","Boolean","parseInt","WithUser","useState","user","setUser","loadingUser","setLoadingUser","fetchUser","isInitialRequest","fetchUserData","fetchedUser","useEffect","refreshUser","Question","question","answerWords","list","correctAnswer","union","selectedAnswer","isCorrect","expandableQuestion","dispatch","x","Game","questions","points","BattleService","gameType","post","gameDefinition","BackButton","platform","IOS","PanelHeader","panelHeaderProps","onBackButtonClick","text","showBackButton","vkPanelHeaderProps","left","undefined","Loader","delay","render","size","pastDelay","setPastDelay","timerId","clearTimeout","trueValues","useFeatureFlag","isReady","useContext","SplitContext","treatments","useTreatments","treatment","enabled","MULTIPLAYER","Home","onStartSingleGame","onStartMultiplayerGame","onUpdateUser","loading","setLoading","multiplayerEnabled","onSwitchNotifications","newChecked","target","checked","requestNotifications","updatedUser","before","description","style","display","flexDirection","multiline","disabled","indicator","onChange","QuestionService","relativeUrlWithoutSlash","removePrecedingSlash","startsWith","renderQuestionMap","questionWord","imagePath","className","createFullPictureUrl","alt","onSelectAnswer","questionString","renderQuestion","map","answer","isCorrectAnswer","isFailure","classes","clsx","correct","failure","stretched","battleActions","initialState","battle","activeQuestion","hasNextQuestion","battleReducer","state","action","payload","length","updatedQuestion","currentQuestions","questionIndex","findIndex","activeQuestionIndex","newQuestionIndex","Battle","onGoBack","onFinishGame","gameMode","game","useReducer","timeBeforeStart","setTimeBeforeStart","gameStarted","setGameStarted","multi","intervalDelay","useInterval","questionToSubmit","submitQuestion","questionWithAnswerData","HomeButton","SingleplayerResults","onRetry","correctAnswersNumber","filter","incorrectAnswersNumber","rejectedNotifications","setRejectedNotifications","showNotificationsRequest","navigationButtons","notificationRequest","marginTop","padding","header","ScoreboardUser","ScoreboardItem","rank","after","SCOREBOARD_TYPES","ScoreboardHome","usersList","setUsersList","activeTab","setActiveTab","currentUserInScoreboard","setCurrentUserInScoreboard","users","currentScoreboardUser","find","fetchData","vertical","selected","paddingTop","index","ChooseGameType","onChoose","VK_APP_URL","Lobby","copiedToastVisible","setCopiedToastVisible","inviteUrl","copy","readOnly","link","duration","GameDefinition","creator","players","ChooseMultiplayerGameAction","onCreateNew","onJoin","JoinMultiplayerGame","onBack","gameId","setGameId","onSubmit","preventDefault","MultiplayerResults","items","playersNumber","loaderText","styles","headerRow","nameHeader","answersHeader","totalQuestions","dataRowWrapper","dataRow","answers","homeButtonWrapper","App","popout","loadingMultiplayerGameDef","setLoadingMultiplayerGameDef","loadingSinglePlayerGame","setLoadingSinglePlayerGame","loadingTooLong","setLoadingTooLong","activeStory","setActiveStory","activePanel","setActivePanel","setBattle","setGameType","setGameMode","defaultValue","setState","ref","useRef","current","useCallback","newValue","useStateRef","multiplayerGameDef","setMultiplayerDameDef","multiplayerGameDefRef","setGame","multiplayerFinishedItems","setMultiplayerFinishedItems","multiplayerSocket","joinedMultiplayerGame","startedMultiplayerGame","joinedTimestamp","waitTillTimestamp","finishedMultiplayerGame","currentItems","joinMultiplayerGame","gameDefId","joinedMultiplayerGameTimestamp","openSocketConnection","joinedGame","startedGame","finishedGame","joinGameDefId","localBattle","getBattle","updatedBattle","goToHomePanel","goToChooseGameTypePanel","gameModeToSet","createMultiplayerGameDefinition","gameDefType","createdGameDefinition","startSinglePlayerGame","chosenGameType","fetchedGame","onStartGame","single","gameDefPromise","gameDef","popoutToRender","tabbar","gameDefinitionId","FeatureFlagService","searchParams","entries","replace","getDevFlagsFrom","FeatureFlagProvider","splitConfig","core","authorizationKey","features","getDevFeatureFlags","SplitFactory","config","AppWrapper","setPopout","Sentry","dsn","beforeSend","hint","exception","errorMessage","originalException","actions","title","autoclose","subscribe","schemeAttribute","createAttribute","scheme","setNamedItem","renderReact","StrictMode","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,aAAe,4B,kmBCDpBC,EAAb,qJAO8BC,GAP9B,iFAQU,IAAIC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKF,MAR/C,mLAeiCI,GAfjC,4EAgBUC,GAAM,IAAIC,MAAOC,aACjBC,EAAOJ,EAAYC,GACd,GAlBf,yCAkByBN,EAAMU,eAAeD,IAlB9C,gCAmBWP,QAAQS,WAnBnB,yGAAaX,EACJY,kBAAmBC,E,8BCSrB,SAASC,EAAT,GAEsD,IAD3DC,EAC0D,EAD1DA,SAEA,OAAKf,EAAMY,iBAGT,cAAC,IAAD,CACEI,SAAU,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,WAA1B,OACR,qCACE,+HACA,4BAAIF,EAAMG,UACV,4BAAIF,IACJ,cAAC,IAAD,CAAQG,QAASF,EAAjB,0HANN,SAUGJ,IAb+BA,E,uICRtC,SAASO,EAAiBC,GACxB,OAAO,SAAoBC,GACzB,OAAOC,IAAYD,EAAQD,IAI/B,SAASG,EAAIC,EAAaC,GACxB,OAAOC,KAAKC,YAAYC,OAAOF,KAAxB,eACJF,EAAM,CACLK,KAAMJ,KAKZ,IAAMK,EAAS,IAAIC,IAUZ,SAASC,EACdC,EACAC,GAEe,IADfC,EACc,uDADC,GAGTf,EAAsBgB,iBAAOH,EAAY,CAC7CC,OACAC,iBAQF,OALAf,EAAMiB,WAAalB,EAAiBC,GACpCA,EAAMkB,UAAUf,IAAMA,EAEtBO,EAAOP,IAAIW,EAAMd,GAEVA,EC7CF,ICcKmB,EDdCC,EAAb,4GACwBN,GAEpB,OADkB,IAAIO,gBAAgBC,OAAOC,SAASC,QACrCC,IAAIX,KAHzB,mCAMsBA,GAElB,OADmB,IAAIO,gBAAgBC,OAAOC,SAASG,KAAKC,MAAM,IAChDF,IAAIX,OAR1B,K,kBESMc,EAAWtC,2BAEXuC,EADgBD,EAASE,SAAS,YACE,SAAW,QAC/CC,EAAwB,+IAExBC,EAA4B,CAChCC,IAAM,mFAGKC,EACE,KADFA,EAEC,KA0BDC,EAAb,2IAEIC,EACAC,GAHJ,uIAIsD,GAJtD,IAIMC,iBAJN,aAIwBC,cAJxB,MAIiC,GAJjC,MAIqCvC,aAJrC,MAI6C,KAJ7C,oBAMWmC,EAAWK,KAAQJ,EAAK,CAC7BC,KAAMF,EAAWM,2BAA2BJ,GAC5CC,YACAI,OAAQ,OACRH,SACAvC,WAXN,yKAgBIoC,EACAC,GAjBJ,uIAkBsD,GAlBtD,IAkBMC,iBAlBN,aAkBwBC,cAlBxB,MAkBiC,GAlBjC,MAkBqCvC,aAlBrC,MAkB6C,KAlB7C,oBAoBWmC,EAAWK,KAAQJ,EAAK,CAC7BC,KAAMF,EAAWM,2BAA2BJ,GAC5CC,YACAI,OAAQ,QACRH,SACAvC,WAzBN,uKA8BIoC,GA9BJ,mIA+BoC,GA/BpC,IA+BMG,cA/BN,MA+Be,GA/Bf,MA+BmBvC,aA/BnB,MA+B2B,KA/B3B,oBAiCWmC,EAAWK,KAAQJ,EAAK,CAC7BE,WAAW,EACXI,OAAQ,MACRH,SACAvC,WArCN,sKA0CIoC,EA1CJ,mGA4CMC,EA5CN,EA4CMA,KACAC,EA7CN,EA6CMA,UACAI,EA9CN,EA8CMA,OACAH,EA/CN,EA+CMA,OA/CN,IAgDMvC,aAhDN,MAgDc,KAhDd,EAyDU2C,EAAY,IAAItB,gBAClBkB,IACIK,EAAeC,IAAUN,GAAQO,KAAK,KAC5CH,EAAUI,OAAO,SAAUH,IAEvBI,EAAuB,CAC3BC,QAASd,EAAWe,cAAc,CAAEZ,eAEvB,QAAXI,IACFM,EAAQG,KAAO,OACfH,EAAQI,KAAOC,KAAKC,UAAUjB,IAEhCW,EAAQN,OAASA,EArErB,SAsE2Ba,kBACrBC,MAAMrB,EAAWsB,iBAAiBrB,EAAKO,GAAYK,GACnD,KAxEN,cAsEUU,EAtEV,yBA0EWvB,EAAWwB,gBAAmBD,EAAU1D,IA1EnD,gJA8EIoC,EA9EJ,GAsFoB,IAAD,IANbwB,iBAMa,MAND,aAMC,MALbC,cAKa,MALJ,aAKI,MAJbC,eAIa,MAJH,aAIG,MAHbC,eAGa,MAHH,aAGG,EAFVC,EAEU,0DACTC,EAAU9B,EAAW+B,oBAAoB9B,GAoCzC+B,EAAe,SAACC,GACpB,IAAMC,EACJrC,EAA0BoC,EAAEE,OAASvC,EAIvC,MAHKC,EAA0BoC,EAAEE,OAE/BC,QAAQ7E,MAAR,uGAAmC0E,EAAEE,OACjC,IAAIE,MAAMH,IAOZI,EAAoB,IAAIC,UAAUT,GACxCQ,EAAOE,iBAAiB,WAhDM,SAACC,GAC7B,IAAMC,EAAyBxB,KAAKyB,MAAMF,EAAMvC,MAC5C0C,EAAuC,KAC3C,GAAIF,EAAUG,SAAU,CACtB,IAAMhF,EH7EP,SACLc,GAEA,IAAMmE,EAAYC,IAAWC,IAAUrE,IACvC,IAAKJ,EAAO0E,IAAIH,GACd,MAAM,IAAIT,MAAJ,8BACmBS,EADnB,8BACkDnE,EADlD,aAGR,OAAOJ,EAAOe,IAAIwD,GGqE6CI,CACvDR,EAAUS,OAEZP,EAAiB5C,EAAWoD,4BAC1BV,EAAUG,SACVhF,GAGJ,IAAIwF,EAA0B,KAC1BX,EAAUxC,OACZmD,EAAarD,EAAWoD,4BAA4BV,EAAUxC,OAGhE,IAAMoD,EAAoBN,IAAUN,EAAUa,MACxCC,EAAoBC,OAAO1E,UAAU2E,eAAeC,KACxD9B,EACAyB,GAEIM,EAAQ,CACZL,KAAMb,EAAUa,KAChBrD,KAAMmD,EACNR,SAAUD,GAERY,GACF3B,EAAqByB,GAAWM,GAGlCnC,EAAUmC,MAkBZtB,EAAOE,iBAAiB,QAASR,GACjCM,EAAOE,iBAAiB,QAASb,GACjCW,EAAOE,iBAAiB,SARH,WACnB,MAAM,IAAIH,MAAM,2KAQlBC,EAAOE,iBAAiB,QAASZ,GAEjC,IAAMiC,EAAgBvB,EAAOwB,MAC7BxB,EAAOwB,MAAQ,WACbxB,EAAOyB,oBAAoB,QAAS/B,GADV,2BAATgC,EAAS,yBAATA,EAAS,gBAE1BH,EAAcI,MAAM3B,EAAQ0B,IAI9B1B,EAAO4B,SAAW,SAAuChE,GACvDoC,EAAOjC,KAAKa,KAAKC,UAAUjB,KAG7BoC,EAAO6B,UAAY,SAEjBxF,EACAuB,GAEA/B,KAAK+F,SACHE,IACE,CACEb,KAAM5E,EACNuB,SAEF,SAAChC,GAAD,OAAWA,OAKjB,IAAMmG,EAA4B/B,EAUlC,OAHAA,EAAOE,iBAAiB,QALH,WACnB6B,EAAWF,UAAU,eAAgB,CACnCG,cAAetE,EAAWuE,8BAI9BjC,EAAOE,iBAAiB,OAAQd,GAEzB2C,IApLX,sCAyLiD,IAAD,yDAAjB,GAD3BlE,EAC4C,EAD5CA,UAEMW,EAAuB,CAC3B0D,OAAQ,mBACR,eAAgB,oBAKlB,OAHIrE,IACFW,EAAQ2D,cAAgBzE,EAAWuE,0BAE9BzD,IAjMX,+CAqMI,GAAI7B,EAASyF,eAAe,cAAe,CACzC,GAAIpI,EAAMY,iBACR,MAAM,IAAImF,MAAM,2CAClB,OAAOrC,EAAW2E,wBAEpB,OAAO3E,EAAW4E,6BA1MtB,iDA8MI,IAAMC,EAAc1F,OAAOC,SAASC,OAAOG,MAAM,GACjD,MAAM,eAAN,OAAsBqF,KA/M1B,8CAmNI,IAAMC,EAAW7F,EAASyF,eAAe,cACzC,MAAM,YAAN,OAAmBI,KApNvB,uCAwNIC,EACAC,GAEA,OAAOhF,EAAWiF,cAAX,cAAgCF,GAAeC,KA3N1D,0CA8N6BD,GACzB,IAAMG,EAAe,aAASH,GAC1BI,EAASnF,EAAWoF,oBAAoB3F,GAE5C,OADA0F,EAASA,EAAO3F,MAAM2F,EAAOE,QAAQ,OAAS,GACxC,GAAN,OAAU3F,GAAV,OAA8ByF,EAA9B,YAAwCD,KAlO5C,oCAsOIH,EACAC,GAEA,IAAMG,EAASnF,EAAWoF,oBAAoB3F,GAC1CQ,EAAG,UAAMkF,EAAN,YAAgBJ,GAIvB,OAHIC,GAAeM,OAAON,KACxB/E,GAAG,WAAQqF,OAAON,KAEb/E,IA9OX,+EAkPIsB,GAlPJ,wFAmPI1D,EAnPJ,+BAmPgC,OAExB0D,EAASgE,QAAU,KAAOhE,EAASgE,OAAS,KArPpD,sBAsPY,IAAIlD,MAAMzC,GAtPtB,gCA4PmB2B,EAASiE,OA5P5B,OA4PMA,EA5PN,6DA8PY,IAAInD,MAAM,8HA9PtB,WAgQSd,EAASkE,GAhQlB,qBAiQUD,EAAKE,OAjQf,uBAkQc,IAAIrD,MAAMmD,EAAKE,QAlQ7B,cAoQY,IAAIrD,MAAM,wKApQtB,iCAsQWrC,EAAWoD,4BAA+BoC,EAAM3H,IAtQ3D,iKAyQoCqC,GAChC,OAAOyF,kBAAQzF,KA1QnB,kDA6QwCA,GAA8B,IAAlBrC,EAAiB,uDAAT,KAClD+H,EAAgBC,kBAAQ3F,GAC9B,OAAIrC,EACKA,EAAMiB,WAAW8G,GAEnBA,IAlRX,0CAqR6B3F,GACzB,OAAOA,EAAI6F,SAAS,KAAO7F,EAAIT,MAAM,GAAI,GAAKS,MAtRlD,K,gBC5Ca8F,EAAOC,sBAAY,QAAQ,SAAC9H,GAAD,OAAqB,OAAVA,KAEtC+H,EAAiBC,qBAC5BC,IAAMC,QACN,SAACC,GAAD,OAAOA,GAAK,IACZ,kBAGWC,EAAKJ,qBAAWC,IAAMC,QAAQ,SAACC,GAAD,OAAOA,GAAK,IAAG,MFV7CE,GAAyB,CACpCC,MAAO,QACPC,MAAO,QACPC,gBAAiB,mBAGNC,GACL,OADKA,GAEF,W,SAMC3H,K,gBAAAA,E,eAAAA,M,KAKL,IGeM4H,GAAb,4HAA0BnI,EA7BP,CACjBoI,GAAIP,EACJQ,KAAMR,EACNS,UAAWZ,IAAMb,OACjB0B,SAAUb,IAAMb,OAChB2B,SAAUd,IAAMb,OAChB4B,MAAOjB,EACPkB,aAAclB,EACdmB,YAAanB,EACboB,YAAapB,EACbqB,oBAAqBnB,IAAMoB,MAAMC,GAC/B/D,OAAOgE,OAAOlB,IACd,wBAiB4D,S,SCvBnDmB,GAAgB,SAACC,GAAD,qBAC3BC,qBAAsB,CAAC,MACpBD,ICXCE,GAAa1K,WAEN2K,GAAmCJ,GAAc,CACtDK,KADsD,WAC/B,OAAD,qGAEzB,SAAUC,EAAG/F,EAAGgG,EAAGC,EAAGC,EAAGC,EAAGC,GAC3BL,EAAC,GACCA,EAAC,IACD,YACIA,EAAC,GAAIK,EAAIL,EAAC,GAAIK,GAAK,IAAIC,KAAKC,YAGlCP,EAAC,GAAIQ,EAAI,EAAI,IAAI3L,KACfuL,EAAInG,EAAEwG,cAAcR,GACnBI,EAAIpG,EAAEyG,qBAAqBT,GAAG,GAC9BG,EAAEO,MAAQ,EACVP,EAAEQ,IAEwB,sCAD3BP,EAAEQ,WAAWC,aAAaV,EAAGC,GAZhC,CAaElJ,OAAQ4J,SAAU,UAErB,IAEEC,GAAGnB,GAAY,OAAQ,CACrBoB,UAAU,EACVC,YAAY,EACZC,qBAAqB,EACrBC,UAAU,IAEZ,MAAOnH,GACPG,QAAQiH,IAAI,wCACZjH,QAAQkH,KAAKrH,GA3BW,8CAgCtBsH,SAjCsD,SAiC7C1C,EAAYC,GAA8B,OAAD,oGACtD,IAEE3H,OAAO6J,GAAGnB,GAAY,aAAc,CAClC2B,OAAQ3C,EACRC,SAEF,MAAO7E,GAEPG,QAAQiH,IAAI,wCAEZjH,QAAQkH,KAAKrH,GAXuC,8CAexDwH,UAhD4D,SAgDlD9K,EAAc+K,GACtB,OAAO,IAAIlN,SAAQ,SAACC,GAClB,IAEE0C,OAAO6J,GAAGnB,GAAY,YAAalJ,EAAM+K,GAAQ,kBAAMjN,OACvD,MAAOwF,GAEPG,QAAQiH,IAAI,wCAEZjH,QAAQkH,KAAKrH,U,SCtDjB0H,GAAoC,K,SAEzBC,K,8EAAf,sBAAAvB,EAAA,yDACsB,OAAhBsB,GADN,sBAEU,IAAItH,MAAM,+BAFpB,uBAIQsH,GAJR,4C,sBAOO,IAAME,GAAmCnC,GAAc,CAC5DK,KAD4D,WAQ1D,OANA4B,GAAc,IAAInN,SAAc,SAACC,GAC/BqN,KAAQ/B,KAdK5K,8CAcY,CACvB4M,aAAa,EACbC,OAAQ,kBAAMvN,UAGX2E,kBAAcuI,GAAa,MAG9BJ,SAXsD,SAW7C1C,EAAYC,GAA8B,OAAD,0HAChD8C,KADgD,OAEhDK,EAAa,CACjBnD,OACA,aAAc7H,EAASiL,aAAa,eAAiB,IAEvDJ,KAAQP,SAASjE,OAAOuB,IACxBiD,KAAQK,OAAOC,SAASH,GACxBH,KAAQO,cAAcJ,GARgC,8CAWlDR,UAtBsD,SAuB1D9K,EACA+K,GACgB,OAAD,oHACTE,KADS,OAEfE,KAAQQ,QAAQ3L,EAAM+K,GAFP,gDCtCNa,GAAiC7C,GAAc,CACpDK,KADoD,WAC7B,OAAD,oGAC1B3F,QAAQiH,IAAI,gBADc,8CAItBE,SALoD,SAK3C1C,EAAYC,GAA8B,OAAD,oGACtD1E,QAAQiH,IAAR,qCAA0CxC,EAA1C,kBAAsDC,IADA,8CAIlD2C,UAToD,SAUxD9K,EACA+K,GACgB,OAAD,oGACVA,EACAtH,QAAQiH,IAAR,qBAA0B1K,EAA1B,gBAA8C+K,GADtCtH,QAAQiH,IAAR,qBAA0B1K,IADxB,gDCbN6L,GAAiB,CAC5B5C,qBAAsB,CAAC,QAEvBG,KAH4B,WAI1B,IAAM0C,EAAkB1B,SAASN,cAAc,UAC/CgC,EAAgBlH,KAAO,yBACvBkH,EAAgB9B,OAAQ,EACxB8B,EAAgB7B,IAAM,uCACtB6B,EAAgBC,OAAS,WAEvBvL,OAAOwL,GAAGC,YAAYC,KAAK1N,wBAE3BgC,OAAOwL,GAAGC,YAAYE,OAExB/B,SAASgC,KAAKC,YAAYP,IAG5BhB,UAjB4B,SAiBlB9K,GACJrC,EAAMY,kBAERiC,OAAOwL,GAAGM,KAAKtM,KChBfuM,GAAsB/N,eAExBwM,GAAoC,K,SAEzBC,K,8EAAf,sBAAAvB,EAAA,yDACsB,OAAhBsB,GADN,sBAEU,IAAItH,MAAM,+BAFpB,uBAIQsH,GAJR,4C,sBAOO,IAAMwB,GAA2CzD,GAAc,CACpEK,KADoE,WAElE,IAAMqD,EAASrC,SAASN,cAAc,UA4BtC,OA3BA2C,EAAOC,aAAa,QAAS,KAC7BD,EAAOC,aACL,MADF,sDAEiDH,KAEjDnC,SAAS9H,KAAKL,OAAOwK,GAEpB,WAGC,SAASE,IAEPC,UAAUjD,KAAKC,WAHjBpJ,OAAOoM,UAAYpM,OAAOoM,WAAa,GAMvCpM,OAAOmM,KAAOA,EAEdA,EAAK,KAAM,IAAIzO,MAGfyO,EAAK,SAAUJ,IAbhB,GAiBDvB,GAAc,IAAInN,SAAQ,SAACC,GACzB2O,EAAO5I,iBAAiB,QAAQ,kBAAM/F,UAEjC2E,kBAAcuI,GAAa,MAG9BJ,SAjC8D,SAiCrD1C,EAAYC,GAA8B,OAAD,0HAChD8C,KADgD,OAEhDK,EAAa7F,IACjB,CACEoH,UAAWvM,EAASiL,aAAa,gBAEnC,SAACuB,GAAD,OAAWA,KAEb,IAEEH,KACE,MACA,kBAEA3F,kBAAQ,cACNkB,KACAC,QACGmD,KAGP,MAAOhI,GACPG,QAAQiH,IAAI,0CACZjH,QAAQkH,KAAKrH,GAtBuC,8CAyBlDwH,UA1D8D,SA2DlE9K,EACA+K,GACgB,OAAD,oHACTE,KADS,OAGf,IAEE0B,KAAK,QAAS3M,EAAM+K,GACpB,MAAOzH,GACPG,QAAQiH,IAAI,0CACZjH,QAAQkH,KAAKrH,GARA,gD,oBCxENyJ,GAAoChE,GAAc,CACvDK,KADuD,WAC/C,OAAD,oGACX4D,KAAS5D,KAJO5K,oCAGL,8CAIPoM,SALuD,SAK9C1C,EAAYC,GAA8B,OAAD,0GAChDmD,EAAa,CACjB,QAASnD,EACT,aAAc7H,EAASiL,aAAa,eAAiB,IAEvDyB,KAASpC,SAASjE,OAAOuB,IACzB8E,KAASxB,OAAOC,SAASH,GACzB0B,KAAStB,cAAcJ,GAP+B,8CAUlDR,UAfuD,SAgB3D9K,EACA+K,GACgB,OAAD,oGACfiC,KAASC,MAAMjN,EAAM+K,GADN,gDChBbmC,GAAqBvP,EAAMY,iBAC7B,CACE4K,GACA+B,GACAW,GACAW,GACAO,IAEF,CAACnB,IAEL,SAAS5G,GAAKpD,GAA0C,IAAD,uBAAtByD,EAAsB,iCAAtBA,EAAsB,kBACrD6H,GAAmBC,SAAQ,SAACnE,IAEY,MAApCA,EAAQC,qBAAqB,IAC7BD,EAAQC,qBAAqBjI,SAASY,KAEtCoH,EAAQpH,GAAR,MAAAoH,EAAmB3D,MAIlB,IAAM+H,GAAW,SACblF,EAAYC,GACnBnD,GAAK,WAAYkD,EAAIC,IAFZiF,GAAW,WAMpBpI,GAAK,SANIoI,GAAW,SASZpN,EAAc+K,GACtB/F,GAAK,YAAahF,EAAM+K,IC/BfsC,GAAb,gPAMWhM,EAAWV,IAAkB,OAAQ,CAAEzB,MAAO+I,MANzD,6PAUImF,GAAmB,uBAVvB,kBAWW/L,EAAWiM,MAChB,OACA,CAAE3E,oBAAqBf,GAAuBC,OAC9C,CAAE3I,MAAO+I,MAdf,6PAmBImF,GAAmB,uBAnBvB,kBAoBW/L,EAAWiM,MAChB,OACA,CAAE3E,oBAAqBf,GAAuBE,OAC9C,CAAE5I,MAAO+I,MAvBf,kQA4BQoF,EAAWE,gCA5BnB,yCA8BaF,EAAWG,sBA9BxB,gCAiC+BC,IAAO/L,KAAK,8BAjC3C,sBAiCcgM,OAjCd,yCAkCyBL,EAAWG,sBAlCpC,4DAsCyB,iBAAjB,KAAEG,aACF,KAAEC,YAC0B,IAA5B,KAAEA,WAAWC,YACiB,gBAA9B,KAAED,WAAWE,aAzCrB,0CA2CeT,EAAWU,sBA3C1B,0IAAaV,GACJE,gCAAkCS,QACvCC,SAAS3N,EAASyF,eAAe,gCAAiC,KC8CvDmI,OAnCf,YAAqD,IAAjCxP,EAAgC,EAAhCA,SAAgC,EAC1ByP,mBAA8B,MADJ,mBAC3CC,EAD2C,KACrCC,EADqC,OAEZF,oBAAS,GAFG,mBAE3CG,EAF2C,KAE9BC,EAF8B,cAInCC,IAJmC,2EAIlD,0CAAA9E,EAAA,6DAAyB+E,EAAzB,gCACEF,GAAe,GADjB,kBAG8BlB,GAAWqB,gBAHzC,UAGUC,EAHV,OAIIN,EAAQM,IACJF,EALR,oBAOQE,EAAYhG,sBAAwBf,GAAuBC,OAC1DwF,GAAWE,gCARpB,6BAUQc,EAVR,UAUsBhB,GAAWU,qBAVjC,2CAYMX,GAAkBuB,EAAYzG,GAAIyG,EAAYxG,MAZpD,yBAeIoG,GAAe,GAfnB,4EAJkD,sBA2BlD,OAJAK,qBAAU,WACRJ,GAAU,KACT,IAEI9P,EAAS,CACd0P,OACAE,cACAD,UACAQ,YAAa,kBAAML,GAAU,O,uDC7BpBM,GAAb,4HAA8BhP,EAlBX,CACjBoI,GAAIP,EACJoH,SAAUvH,IAAMb,OAChBqI,YAAaxH,IAAMyH,KAAKzH,IAAMb,QAC9BuI,cAAe1H,IAAM2H,MAAM,CAAC/H,EAAMI,IAAMb,SACxCyI,eAAgB5H,IAAM2H,MAAM,CAAC/H,EAAMI,IAAMb,SACzC0I,UAAW7H,IAAMwG,SAcjB,aCnBIsB,GAAqB9H,IAAM2H,MAAM,CAACL,GAAUtH,IAAMC,SACxD6H,GAAmBC,SAAW,SAACC,GAC7B,MAAiB,kBAANA,EAAuBhI,IAAMC,OACjCqH,IAGT,IAYaW,GAAb,4HAA0B3P,EAZP,CACjBoI,GAAIP,EACJ+H,UAAWlI,IAAMyH,KAAKK,IACtBK,OAAQnI,IAAMC,QASgD,SCjBnDmI,GAAb,4JAEIC,GAFJ,uFAIiCxO,EAAWyO,KACtC,kBACA,CACElL,KAAMiL,IAPd,cAIUE,EAJV,yBAUW1O,EAAWyO,KAChB,OACA,CAAEC,eAAgBA,EAAe7H,IACjC,CAAEzG,OAAQ,YAAavC,MAAOuQ,MAbpC,gLAkBIV,GAlBJ,0FAoBW1N,EAAWiM,MAAX,mBACOyB,EAAS7G,IACrB,CACEkH,eAAgBL,EAASK,gBAE3B,CAAElQ,MAAO4P,MAzBf,2KA6ByB5G,GA7BzB,0FA8BW7G,EAAWV,IAAX,eAAuBuH,GAAM,CAAEzG,OAAQ,YAAavC,MAAOuQ,MA9BtE,yG,4HCKeO,OANf,WAEE,OADeC,iBACAC,KAAY,cAAC,KAAD,IACpB,cAAC,KAAD,KCAM,SAASC,GAAT,GAK4C,IAJzDC,EAIwD,EAJxDA,iBACAC,EAGwD,EAHxDA,kBACAC,EAEwD,EAFxDA,KACAC,EACwD,EADxDA,eAEMC,EAAkB,gBAAQJ,GAQhC,OANEI,EAAmBC,KADjBF,EAEA,cAAC,KAAD,CAAmBvR,QAASqR,EAA5B,SACE,cAAC,GAAD,WAGyBK,EACxB,cAAC,KAAD,6BAAmBF,GAAnB,aAAwCF,KAYjDH,GAAYlQ,aAAe,CACzBmQ,iBAAkB,GAClBG,gBAAgB,EAChBF,kBAAmB,cCVNM,OAlBf,YAGwB,IAAD,IAFrBC,aAEqB,MnBOY,ImBPZ,MADrBC,cACqB,MADZ,kBAAM,cAAC,KAAD,CAAcC,KAAK,WACb,IACa3C,oBAAS,GADtB,mBACd4C,EADc,KACHC,EADG,KAWrB,OATApC,qBAAU,WACR,IAAMqC,EAAUlT,YAAW,WACzBiT,GAAa,KACZJ,GACH,OAAO,WACLM,aAAaD,MAEd,CAACL,IAEAG,EAAkBF,IACf,M,oBCpBHM,GAAa,CAAC,KAAM,IAAK,OAAQ,OAExB,SAASC,GACtBpR,GAIC,IACOqR,EAAYC,qBAAgCC,MAA5CF,QAEFG,EAAaC,aAAc,CAACzR,IAC5BT,EAAQyO,QAAQwD,EAAWxR,KAAUwR,EAAWxR,GAAM0R,UAG5D,MAAO,CACLL,UACAM,QAJcR,GAAWnQ,SAASzB,IChB/B,I,GAAMqS,GAAc,cCgHZC,GA3FF,SAAC,GAKa,IAJzBC,EAIwB,EAJxBA,kBACAC,EAGwB,EAHxBA,uBAGwB,IAFxB3D,YAEwB,MAFjB,KAEiB,EADxB4D,EACwB,EADxBA,aACwB,EACM7D,oBAAS,GADf,mBACjB8D,EADiB,KACRC,EADQ,KAEPC,EAAuBf,GAAeQ,IAA/CD,QAEFS,EAAqB,uCAAG,WAAOtO,GAAP,iBAAA4F,EAAA,yDACX2I,EAAevO,EAAMwO,OAA9BC,QACRL,GAAW,GAFiB,UAKtBG,EALsB,gCAOJhF,GAAWmF,uBAPP,OAOxBC,EAPwB,+CAUJpF,GAAWU,qBAVP,QAUxB0E,EAVwB,eAY1BT,EAAaS,GAZa,yBAc1BP,GAAW,GAde,2EAAH,sDAkB3B,OACE,qCACE,cAAC/B,GAAD,CAAaG,KAAK,gBAAgBC,gBAAgB,IACjDnC,GACC,cAAC,KAAD,UACE,cAAC,KAAD,CACEsE,OAAQtE,EAAK9F,SAAW,cAAC,KAAD,CAAQ2B,IAAKmE,EAAK9F,WAAe,KACzDqK,YACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAA9C,UACE,kIAA0B1E,EAAK7F,SAAc,IAC7C,4HAAyB6F,EAAK3F,kBAGlCsK,WAAS,EARX,mBAUM3E,EAAKhG,UAVX,YAUwBgG,EAAK/F,cAKjC,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAQyI,KAAK,KAAK9R,QAAS8S,EAAmBkB,SAAUf,EAAxD,oIAIDE,GACC,cAAC,KAAD,UACE,cAAC,IAAD,CACErB,KAAK,KACL9R,QAAS+S,EACTiB,SAAUf,EAHZ,qGAYP7D,GACC,cAAC,KAAD,UACE,cAAC,KAAD,CACE2E,WAAS,EACTE,UACE,cAAC,KAAD,CACEV,QACEnE,EAAKzF,sBAAwBf,GAAuBC,MAEtDqL,SAAUd,EACVY,SAAUf,IARhB,kKAgBHA,GAAW,cAAC,GAAD,Q,mBCzGLkB,GAAb,kHAC8B/M,GAC1B,IAAMgN,EAA0BD,EAAgBE,qBAC9CjN,GAEF,OAAO/E,EAAWiF,cAAc8M,KALpC,2CAQ8B9R,GAC1B,OAAOA,EAAIgS,WAAW,KAAOhS,EAAIT,MAAM,GAAKS,MAThD,KCcMiS,IAAiB,qBACpBvL,IAAkB,SAACwL,GAAD,OACjB,qCACE,2IAAyBA,KACzB,kMAJiB,eAOpBxL,IAAqB,SAACyL,GAAD,OACpB,sBAAKC,UAAU,mBAAf,UACE,qBACEzJ,IAAKkJ,GAAgBQ,qBAAqBF,GAC1CG,IAAI,6GAEN,8DAbiB,IAsDR9E,OApCf,YAA+E,IAA3DC,EAA0D,EAA1DA,SAAUc,EAAgD,EAAhDA,SAAUgE,EAAsC,EAAtCA,eAEpC7E,EAKED,EALFC,YACAI,EAIEL,EAJFK,eACAC,EAGEN,EAHFM,UACAH,EAEEH,EAFFG,cACU4E,EACR/E,EADFA,SAEIgF,EAAiBR,GAAkB1D,GACzC,OACE,eAAC,KAAD,WACE,cAAC,KAAD,UAAQkE,EAAeD,KACtB9E,EAAYgF,KAAI,SAACC,GAChB,IAAMC,EAAkBD,IAAW/E,EAC7BiF,GAAa9E,GAAa4E,IAAW7E,EACrCgF,EAAUC,aAAK,gBAAiB,CACpCC,QAASJ,EACTK,QAASJ,IAEX,OACE,cAAC,IAAD,CAEErD,KAAK,KACLzO,KAAK,UACLmS,WAAS,EACTd,UAAWU,EACXpV,QAAS,kBAAOoQ,GAAkByE,EAAeI,IANnD,SAQGA,GAPIA,UCpDJQ,GACA,YADAA,GAEK,iBAFLA,GAGO,mBAGPC,GAAe,CAC1BC,OAAQ,KACRC,eAAgB,KAChBC,iBAAiB,GAGZ,SAASC,KAWb,IAVDC,EAUA,uDAVQL,GACRM,EASA,uCACA,OAAQA,EAAOpQ,MACb,KAAK6P,GACH,IAAME,EAASK,EAAOC,QACdvF,EAAciF,EAAdjF,UACR,OAAO,6BACFqF,GADL,IAEEJ,SACAC,eAAgBlF,EAAU,GAC1BmF,gBAAiBnF,EAAUwF,OAAS,IAGxC,KAAKT,GACH,IAAMU,EAAkBH,EAAOC,QACzBG,EAAmBL,EAAMJ,OAAOjF,UAChC2F,EAAgBD,EAAiBE,WACrC,qBAAGpN,KAAgBiN,EAAgBjN,MAE/BwH,EAAS,uBACV0F,EAAiBvU,MAAM,EAAGwU,IADhB,CAEbF,GAFa,aAGVC,EAAiBvU,MAAMwU,EAAgB,KAE5C,OAAO,6BACFN,GADL,IAEEJ,OAAO,6BACFI,EAAMJ,QADL,IAEJjF,cAEFkF,eAAgBO,IAGpB,KAAKV,GACH,IAAMW,EAAmBL,EAAMJ,OAAOjF,UAChC6F,EAAsBH,EAAiBE,WAC3C,qBAAGpN,KAAgB6M,EAAMH,eAAe1M,MAE1C,GAAIqN,IAAwBH,EAAiBF,OAAS,EACpD,MAAM,IAAIxR,MAAM,kJAElB,IAAM8R,EAAmBD,EAAsB,EAC/C,OAAO,6BACFR,GADL,IAEEH,eAAgBQ,EAAiBI,GACjCX,gBAAiBW,EAAmBJ,EAAiBF,OAAS,IAGlE,QACE,OAAOH,G,cCuBEU,I,OA1EA,SAAC,GAMe,IAL7BC,EAK4B,EAL5BA,SACAC,EAI4B,EAJ5BA,aAI4B,IAH5B9F,gBAG4B,MAHjB,KAGiB,MAF5B+F,gBAE4B,MAFjB,KAEiB,MAD5BC,YAC4B,MADrB,KACqB,IACE1H,oBAAS,GADX,mBACrB8D,EADqB,KACZC,EADY,OAEF4D,qBAAWhB,GAAeJ,IAFxB,mBAErBK,EAFqB,KAEdxF,EAFc,KAGpBoF,EAA4CI,EAA5CJ,OAAQC,EAAoCG,EAApCH,eAAgBC,EAAoBE,EAApBF,gBAHJ,EAIkB1G,mBAAiB,GAJnC,mBAIrB4H,EAJqB,KAIJC,EAJI,OAKU7H,oBAAS,GALnB,mBAKrB8H,EALqB,KAKRC,EALQ,KAO5BtH,qBAAU,WACJiH,IACFtG,EAAS,CACP3K,KAAM6P,GACNQ,QAASY,IAEPD,IAAavV,EAAU8V,MAAOH,EAAmB,GAChDE,GAAe,MAErB,CAACL,EAAMD,IAEV,IAIMQ,EAAgBzB,IAAWsB,EAAc,IAAO,KAEtDI,cANyC,WACf,IAApBN,EAAuBG,GAAe,GACrCF,EAAmBD,EAAkB,KAIEK,GAE9C,IAAMvC,EAAc,uCAAG,WAAOI,GAAP,iBAAAvK,EAAA,0DACjBuI,EADiB,wDAEfqE,EAAmB1B,EAAevV,IAAI,iBAAkB4U,GAC9D/B,GAAW,GAHU,kBAKkBtC,GAAc2G,eACjDD,GANiB,OAKbE,EALa,OAQnBjH,EAAS,CACP3K,KAAM6P,GACNQ,QAASuB,IAVQ,uBAanBtE,GAAW,GAbQ,qCAgBfvU,EAAMU,eA1DyB,KA0ChB,QAkBjBwW,EAAiBtF,EAAS,CAAE3K,KAAM6P,KACjCkB,EAAahB,GAnBG,6DAAH,sDAsBpB,OACE,qCACE,cAACxE,GAAD,CAAaE,kBAAmBqF,EAAUpF,KAAK,6BAC9C2F,GAAerB,GACd,cAAC,GAAD,CACE7F,SAAU6F,EACVf,eAAgBA,EAChBhE,SAAUA,KAGZoG,GACA,eAAC,KAAD,CAAKvC,UAAU,mBAAf,yFACmBqC,KAGpB9D,GAAW,cAAC,GAAD,S,uGC9EHwE,OARf,SAAoBxR,GAClB,OACE,cAAC,IAAD,2BAAQ6L,KAAK,IAAI4B,OAAQ,cAAC,KAAD,KAAoBzN,GAA7C,kDCyIWyR,OAvHf,YAMwB,IAAD,IALrBtI,YAKqB,MALd,KAKc,EAJrBsH,EAIqB,EAJrBA,SAIqB,IAHrBf,cAGqB,MAHZ,KAGY,EAFrBgC,EAEqB,EAFrBA,QACA3E,EACqB,EADrBA,aAEQtC,EAAsBiF,EAAtBjF,UAAWC,EAAWgF,EAAXhF,OACbiH,EAAuBlH,EAAUmH,QAAO,qBAAGxH,aAC9C6F,OACG4B,EAAyBpH,EAAUwF,OAAS0B,EAJ7B,EAKqCzI,oBAAS,GAL9C,mBAKd4I,EALc,KAKSC,EALT,OAMS7I,oBAAS,GANlB,mBAMd8D,EANc,KAMLC,EANK,KAQf+E,EACJ7I,EAAKzF,sBAAwBf,GAAuBG,gBAEhDmP,EACJ,sBAAKxD,UAAU,yBAAf,UACE,cAAC,GAAD,CAAY1U,QAAS0W,IACrB,cAAC,IAAD,CAAQ1W,QAAS2X,EAAS7F,KAAK,IAAI4B,OAAQ,cAAC,KAAD,IAA3C,sDAdiB,4CAoBrB,4BAAAhJ,EAAA,0DACMuI,EADN,wDAEEC,GAAW,GAFb,kBAI8B7E,GAAWmF,uBAJzC,OAIUC,EAJV,OAKIT,EAAaS,GACTA,EAAY9J,sBAAwBf,GAAuBE,OAE7DkP,GAAyB,GAR/B,uBAWI9E,GAAW,GAXf,0EApBqB,+BAmCNnE,IAnCM,2EAmCrB,sBAAArE,EAAA,0DACMuI,EADN,wDAEEC,GAAW,GAFb,cAIIF,EAJJ,SAIuB3E,GAAWU,qBAJlC,kCAKIiJ,GAAyB,GAL7B,yBAOI9E,GAAW,GAPf,4EAnCqB,sBA8CrB,IAAMiF,EACJ,cAAC,KAAD,CAAUvE,MAAO,CAAEwE,UAAW,QAA9B,SACE,cAAC,KAAD,CAAMtG,KAAK,IAAI8B,MAAO,CAAEyE,QAAS,QAAjC,SACE,sBAAK3D,UAAU,+BAAf,UACE,sBAAMA,UAAU,8BAAhB,2SAGA,sBAAKA,UAAU,+BAAf,UACE,cAAC,IAAD,CACE5C,KAAK,IACLzO,KAAK,WACLqR,UAAU,sBACV1U,QA1DS,2CA2DTgU,SAAUf,EALZ,gFASA,cAAC,IAAD,CACEnB,KAAK,IACLzO,KAAK,YACLqR,UAAU,sBACV1U,QAAS+O,EACTiF,SAAUf,EALZ,kEAUF,sBAAMyB,UAAU,6BAAhB,SACE,cAAC,KAAD,CAAc1U,QAAS+O,MAEzB,sBAAM2F,UAAU,+BAAhB,kPAOR,OACE,qCACE,cAACvD,GAAD,CAAaG,KAAK,+DAAaD,kBAAmBqF,IAClD,eAAC,KAAD,CAAO4B,OAAQ,cAAC,KAAD,CAAQjV,KAAK,YAAb,0EAAf,UACE,cAAC,KAAD,CACE4Q,UAAW,cAAC,KAAD,CAAS5Q,KAAK,UAAd,SAAyBuU,IADtC,8FAKA,cAAC,KAAD,CACE3D,UAAW,cAAC,KAAD,CAAS5Q,KAAK,UAAd,SAAyByU,IADtC,0GAKA,cAAC,KAAD,CAAM7D,UAAW,cAAC,KAAD,CAAS5Q,KAAK,UAAd,SAAyBsN,IAA1C,kGAIAsH,GAA4BC,EAC7BD,GAA4BE,EAC5BJ,GACC,cAAC,KAAD,CAAKrD,UAAU,kBAAf,4MAIDzB,GAAW,cAAC,GAAD,Q,oBCxHLsF,GAAb,4HAAoCzX,EAhBjB,CACjBoI,GAAIP,EACJS,UAAWZ,IAAMb,OACjB0B,SAAUb,IAAMb,OAChB2B,SAAUd,IAAMb,OAChB4B,MAAOjB,GAaP,mB,OCSakQ,OA3Bf,YAM8D,IAL5DC,EAK2D,EAL3DA,KACAlP,EAI2D,EAJ3DA,MACAD,EAG2D,EAH3DA,SACAF,EAE2D,EAF3DA,UACAC,EAC2D,EAD3DA,SAEA,OACE,cAAC,KAAD,CAAYqK,OAAQ,cAAC,KAAD,UAAU+E,IAAiBC,MAAOnP,EAAtD,SACE,sBAAKmL,UAAU,kBAAf,UACE,cAAC,KAAD,CAAQ5C,KAAM,GAAI7G,IAAK3B,IACvB,sBAAKoL,UAAU,uBAAf,UACGtL,EADH,IACeC,WCNjBsP,GACK,UADLA,GAEK,UA4FIC,OArFf,YAA8D,IAAD,IAAnCxJ,YAAmC,MAA5B,KAA4B,IACzBD,mBAA2B,IADF,mBACpD0J,EADoD,KACzCC,EADyC,OAE7B3J,oBAAS,GAFoB,mBAEpD8D,EAFoD,KAE3CC,EAF2C,OAGzB/D,mBAASwJ,IAHgB,mBAGpDI,EAHoD,KAGzCC,EAHyC,OAIG7J,oBAAS,GAJZ,mBAIpD8J,EAJoD,KAI3BC,EAJ2B,KAwB3D,OAlBAtJ,qBAAU,YACO,uCAAG,8BAAAlF,EAAA,6DAChBoO,EAAa,IACb5F,GAAW,GAFK,SAGI7Q,EAAWV,IAAX,UACfoX,EADe,gBAHJ,OAGVI,EAHU,OAMVC,EAAwBb,GAAepX,WAAf,gBAA+BiO,IAC7D8J,EACElK,QAAQmK,EAAME,MAAK,qBAAGnQ,KAAgBkQ,EAAsBlQ,QAE9D4P,EAAaK,GACbjG,GAAW,GAXK,2CAAH,qDAcfoG,KACC,CAACP,EAAW3J,IAGb,qCACE,cAAC+B,GAAD,CAAaG,KAAK,6CAAUC,gBAAgB,IAC5C,cAAC,KAAD,CAAagI,SAAS,MAAtB,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CACEC,SAAUT,IAAcJ,GACxB3Y,QAAS,kBAAMgZ,EAAaL,KAF9B,4EAMA,cAAC,KAAD,CACEa,SAAUT,IAAcJ,GACxB3Y,QAAS,kBAAMgZ,EAAaL,KAF9B,8DAQJ,cAAC,KAAD,UACE,eAAC,KAAD,CAAO/E,MAAO,CAAE6F,WAAY,QAA5B,WACIxG,GACA,eAAC,KAAD,WACG4F,EAAU7D,KACT,WAA+C0E,GAA/C,IAAGxQ,EAAH,EAAGA,GAAIE,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,SAAUC,EAAtC,EAAsCA,MAAtC,OACE,cAAC,GAAD,CACEkP,KAAMiB,EAAQ,EACdnQ,MAAOA,EACPD,SAAUA,EACVF,UAAWA,EACXC,SAAUA,GACLH,OAIT+P,GACA,cAAC,GAAD,CACER,KACEM,IAAcJ,GACVvJ,EAAK3F,YACL2F,EAAK1F,YAEXH,MACEwP,IAAcJ,GACVvJ,EAAK7F,MACL6F,EAAK5F,aAEXF,SAAU8F,EAAK9F,SACfF,UAAWgG,EAAKhG,UAChBC,SAAU+F,EAAK/F,cAKtB4J,GAAW,cAAC,GAAD,a,OCnEP0G,OAnBf,YAAqE,IAA3CjD,EAA0C,EAA1CA,SAAUkD,EAAgC,EAAhCA,SAClC,OACE,qCACE,cAACzI,GAAD,CAAaG,KAAK,8CAAWD,kBAAmBqF,IAChD,eAAC,KAAD,WACE,cAAC,KAAD,CAAQrT,KAAK,UAAb,+FACA,sBAAKqR,UAAU,wBAAf,UACE,cAAC,KAAD,CAAQ5C,KAAK,IAAI9R,QAAS,kBAAM4Z,EAAS5Q,KAAzC,8DAGA,cAAC,KAAD,CAAQ8I,KAAK,IAAI9R,QAAS,kBAAM4Z,EAAS5Q,KAAzC,kE,oBCNJ6Q,I,OAAaxX,EAAWoF,oBAC5BjI,8BAwFasa,OArFf,YAAkE,IAAjD/I,EAAgD,EAAhDA,eAAgB2F,EAAgC,EAAhCA,SAAgC,EACXvH,oBAAS,GADE,mBACxD4K,EADwD,KACpCC,EADoC,KAG/D,IAAKjJ,EACH,OACE,qCACE,cAACI,GAAD,CAAaG,KAAK,mFAAkBD,kBAAmBqF,IACvD,cAAC,GAAD,OAIN,IAAMuD,EAAS,UAAMJ,GAAN,gBAAwB9I,EAAe7H,IAEhDgR,EAAI,uCAAG,WAAO5I,GAAP,SAAA5G,EAAA,sEACL+D,IAAO/L,KAAK,mBAAoB,CAAE4O,SAD7B,OAEX0I,GAAsB,GAFX,2CAAH,sDAQV,OACE,qCACE,cAAC7I,GAAD,CAAaG,KAAK,uEAAgBD,kBAAmBqF,IACrD,cAAC,KAAD,UACE,eAAC,KAAD,WACE,sBAAKhC,UAAU,iBAAf,UACE,qBAAKA,UAAU,mBAAf,gXAIA,sBAAKA,UAAU,gBAAf,UACE,cAAC,KAAD,CAAOA,UAAU,mBAAmBnU,MAAO0Z,EAAWE,UAAQ,IAC9D,cAAC,KAAD,CACEna,QAAS,kBAAMka,EAAKD,IACpBvF,UAAU,cACVhB,OAAQ,cAAC,KAAD,IAHV,SAKE,sBAAMgB,UAAU,kBAAhB,kFAEF,cAAC,KAAD,CACE1U,QAxBI,kBAAMyO,IAAO/L,KAAK,gBAAiB,CAAE0X,KAAMH,KAyB/CvF,UAAU,eACVhB,OAAQ,cAAC,KAAD,IAHV,SAKE,sBAAMgB,UAAU,kBAAhB,kFAIN,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBAAf,6LAGA,sBAAKA,UAAU,gBAAf,UACE,cAAC,KAAD,CACEA,UAAU,mBACVnU,MAAOwQ,EAAe7H,GACtBiR,UAAQ,IAEV,cAAC,KAAD,CACEna,QAAS,kBAAMka,EAAKnJ,EAAe7H,KACnCwL,UAAU,cACVhB,OAAQ,cAAC,KAAD,IAHV,SAKE,sBAAMgB,UAAU,kBAAhB,wFAIN,sBAAKA,UAAU,iBAAf,UACE,cAAC,GAAD,IACA,sBAAMA,UAAU,iBAAhB,0NAIDqF,GACC,cAAC,KAAD,CAAU/V,QAxDC,kBAAMgW,GAAsB,IAwDNK,SAAU,IAA3C,yFC3ECC,GAAb,4HAAoCxZ,EAdjB,CACjBoI,GAAIV,IAAMb,OACV4S,QAAS5R,EACT6R,QAAShS,IAAMyH,KAAKtH,GACpB/C,KAAM4C,IAAMb,QAYZ,mB,OCaa8S,OAvBf,YAIwB,IAHtBC,EAGqB,EAHrBA,YACAC,EAEqB,EAFrBA,OACAjE,EACqB,EADrBA,SAEA,OACE,qCACE,cAACvF,GAAD,CAAaG,KAAK,wFAAkBD,kBAAmBqF,IACvD,eAAC,KAAD,WACE,cAAC,KAAD,CAAQrT,KAAK,UAAb,oGACA,sBAAKqR,UAAU,gCAAf,UACE,cAAC,KAAD,CAAQ1U,QAAS0a,EAAa5I,KAAK,KAAK0D,WAAS,EAAjD,0GAGA,cAAC,KAAD,CAAQxV,QAAS2a,EAAQ7I,KAAK,KAAK0D,WAAS,EAA5C,4L,OCmBKoF,OAlCf,YAAsE,IAAvCD,EAAsC,EAAtCA,OAAQE,EAA8B,EAA9BA,OAA8B,EACvC1L,mBAAiB,IADsB,mBAC5D2L,EAD4D,KACpDC,EADoD,KAcnE,OACE,qCACE,cAAC5J,GAAD,CAAaG,KAAK,uHAAwBD,kBAAmBwJ,IAC7D,eAAC,KAAD,WACE,qBAAKnG,UAAU,sBAAf,4NAGA,uBAAMsG,SAZK,SAAC1W,GAChBA,EAAE2W,iBACFN,EAAOG,IAUH,UACE,cAAC,KAAD,CAAO5G,SAnBuB,SACpC5P,GAEAyW,EAAUzW,EAAEgP,OAAO/S,UAiBb,cAAC,KAAD,UACE,cAAC,KAAD,CAAQqF,KAAK,SAAS4P,WAAS,EAAC1D,KAAK,KAArC,8G,oBCoCGoJ,OAhDf,YAIwB,IAHtBxE,EAGqB,EAHrBA,SACAyE,EAEqB,EAFrBA,MACAC,EACqB,EADrBA,cAEMC,EACc,IAAlBD,EAAsB,6HAA2B,6HACnD,OACE,qCACE,cAACjK,GAAD,CAAaG,KAAK,+DAAaD,kBAAmBqF,IAClD,eAAC,KAAD,WACE,gCACE,cAAC,KAAD,UACE,sBAAKhC,UAAW4G,KAAOC,UAAvB,UACE,sBAAM7G,UAAW4G,KAAOE,WAAxB,4CACA,sBAAM9G,UAAW4G,KAAOG,cAAxB,6FACA,iEAGHN,EAAMnG,KACL,gBAAG5F,EAAH,EAAGA,KAAMwI,EAAT,EAASA,qBAAsB8D,EAA/B,EAA+BA,eAAgB/K,EAA/C,EAA+CA,OAA/C,OACE,cAAC,KAAD,CAAoB+D,UAAW4G,KAAOK,eAAtC,SACE,sBAAKjH,UAAW4G,KAAOM,QAAvB,UACE,cAAC,KAAD,CAAQ3Q,IAAKmE,EAAK9F,WAClB,sBAAMoL,UAAW4G,KAAOta,KAAxB,SAA+BoO,EAAKhG,YACpC,uBAAMsL,UAAW4G,KAAOO,QAAxB,UACGjE,EADH,iBAC6B8D,KAE7B,+BAAO/K,QAPAvB,EAAKlG,UAarBiS,EAAMjF,OAASkF,GACd,qCACE,cAAC,GAAD,IACA,qBAAK1G,UAAW4G,KAAOD,WAAvB,SAAoCA,OAGxC,qBAAK3G,UAAW4G,KAAOQ,kBAAvB,SACE,cAAC,GAAD,CAAY9b,QAAS0W,aCf/B,IAwWeqF,GAxWH,SAAC,GAMc,IALzB3M,EAKwB,EALxBA,KACAE,EAIwB,EAJxBA,YACAD,EAGwB,EAHxBA,QACAQ,EAEwB,EAFxBA,YACAmM,EACwB,EADxBA,OACwB,EAC0C7M,oBAChE,GAFsB,mBACjB8M,EADiB,KACUC,EADV,OAIsC/M,oBAAS,GAJ/C,mBAIjBgN,EAJiB,KAIQC,EAJR,OAKoBjN,oBAAS,GAL7B,mBAKjBkN,EALiB,KAKDC,EALC,OAMcnN,mBAAS,QANvB,mBAMjBoN,EANiB,KAMJC,EANI,OAOcrN,mBAAS,QAPvB,mBAOjBsN,EAPiB,KAOJC,EAPI,OAQIvN,mBAA8B,MARlC,mBAQjBwG,EARiB,KAQTgH,EARS,OASQxN,mBAA0B,MATlC,mBASjB0B,EATiB,KASP+L,EATO,OAUQzN,mBAA2B,MAVnC,mBAUjByH,EAViB,KAUPiG,EAVO,OC9CX,SACbC,GAC2C,IAAD,EAChB3N,mBAAS2N,GADO,mBACnC/G,EADmC,KAC5BgH,EAD4B,KAEpCC,EAAMC,iBAAOH,GAQnB,OAPAE,EAAIE,QAAUnH,EAOP,CAACA,EALSoH,uBAAY,SAACC,GAC5BJ,EAAIE,QAAUE,EACdL,EAASK,KACR,IAEsBJ,GDiDrBK,CAA2C,MAfvB,mBAYtBC,EAZsB,KAatBC,EAbsB,KActBC,EAdsB,QAgBArO,mBAA8B,MAhB9B,qBAgBjB0H,GAhBiB,MAgBX4G,GAhBW,SAiBwCtO,mBAE9D,IAnBsB,qBAiBjBuO,GAjBiB,MAiBSC,GAjBT,MAoBlBC,GAAoBX,iBAA6B,MACtC9J,GAAuBf,GAAeQ,IAA/CD,QAEFkL,GAAwBV,uBAC5B,YAAyD,IAAtDjY,EAAqD,EAArDA,SACDqY,EAAsBrY,KAExB,CAACqY,IAGGO,GAAyBX,sBAAW,uCACxC,aAEEY,GAFF,eAAArT,EAAA,yDACIxF,EADJ,EACIA,SAGFuY,GAAQvY,IACJ6Y,EALN,uBAM8B,IAN9B,SAQUpf,EAAMqf,kBAAkBD,EAFJ,KAN9B,OAUErB,EAAe,UAVjB,2CADwC,wDAaxC,IAGIuB,GAA0Bd,uBAC9B,YAMO,IALLjY,EAKI,EALJA,SACA3C,EAII,EAJJA,KAKAob,IAA4B,SAACO,GAS3B,OAPEA,EAAahI,SACbsH,EAAsBN,QAAQ1C,QAAQtE,OAAS,GAE/C0H,GAAkBV,QAAQ/W,MACxB/D,GAGE,GAAN,oBACK8b,GADL,eAGI9O,KAAMlK,GACH3C,UAKX,CAACib,EAAuBI,KAG1BhO,qBAAU,WACR+N,GAA4B,MAC3B,CAACL,IAEJ,IAAMa,GAAsBhB,sBAAW,uCACrC,WAAOiB,GAAP,iBAAA1T,EAAA,6DACEwR,GAA6B,GAD/B,kBAGiC7Z,EAAWV,IAAX,0BACRyc,GACnB,CAAEle,MAAOoa,KALf,OAGUvJ,EAHV,OAOIwM,EAAsBxM,GAChBsN,GAAiC,IAAInf,MAAOC,UAClDud,EAAe,SACfE,EAAY7L,EAAenL,MAC3BgY,GAAkBV,QAAU7a,EAAWic,qBAAX,2BACNF,GACpB,CACEG,WAAYV,GACZW,YAAa,gBAAGtZ,EAAH,EAAGA,SAAH,OACX4Y,GACE,CAAE5Y,YACFmZ,IAEJI,aAAcR,KApBtB,qDAwBsB,8GAAd,KAAEle,QAxBV,uBAyBY,IAAI2E,MAAM,0KAzBtB,4CA4BIwX,GAA6B,GA5BjC,6EADqC,sDAgCrC,CACE4B,GACAG,GACAJ,GACAN,IAIJ3N,qBAAU,WACR,GAAKuD,GAAL,CACA,IAAMuL,EAAgBpd,EAASiL,aAAa,OACxCmS,IACFP,GAAoBO,GACpB7B,EAAYxb,EAAU8V,WAEvB,CAACgH,GAAqBhL,KAEzB,IAAMwD,GAAY,uCAAG,WAAOgI,GAAP,eAAAjU,EAAA,sEACSkG,GAAcgO,UAAUD,EAAYzV,IAD7C,OACb2V,EADa,OAEnBlC,EAAUkC,GACVnC,EAAe,WACftO,GAAmB,eACnBvB,GAAef,UAAU,cACzB+D,IANmB,2CAAH,sDASZiP,GAAgB,kBAAMpC,EAAe,SAErCqC,GAA0B,SAACC,GAC3BA,IAAkBpI,GAAUiG,EAAYmC,GAC5CtC,EAAe,qBA7IO,SAgJTuC,GAhJS,iFAgJxB,WACEC,GADF,eAAAxU,EAAA,sEAGsCrI,EAAWyO,KAC7C,kBACA,CAAElL,KAAMsZ,GACR,CAAEhf,MAAOoa,KANb,cAGQ6E,EAHR,OAQE5B,EAAsB4B,GARxB,kBASSA,GATT,4CAhJwB,sBA4JxB,IAAMC,GAAqB,uCAAG,WAAOC,GAAP,eAAA3U,EAAA,6DAC5B0R,GAA2B,GADC,kBAGAxL,GAAcwO,sBACtCC,GAJwB,OAGpBC,EAHoB,OAM1B7B,GAAQ6B,GANkB,uBAQ1BlD,GAA2B,GARD,uEAAH,sDAYrBmD,GAAW,uCAAG,WAAOF,GAAP,iBAAA3U,EAAA,yDACd2U,IAAmBxO,GAAU+L,EAAYyC,GACzCzI,IAAavV,EAAUme,OAFT,gCAGVJ,GAAsBC,GAHZ,OAIhB3C,EAAe,UAJC,8BAMV+C,EAAiBR,GAAgCI,GACvD3C,EAAe,SAPC,UAQM+C,EARN,QAQVC,EARU,OAShB9B,GAAkBV,QAAU7a,EAAWic,qBAAX,2BACNoB,EAAQxW,IAC5B,CACEqV,WAAY,YAAyD,IAAtDrZ,EAAqD,EAArDA,SACb2Y,GAAsB,CAAE3Y,aACQ,IAA5BA,EAASsV,QAAQtE,SACnB0H,GAAkBV,QAAQ1W,UAAU,cACpC4H,GAAmB,6BAGvBoQ,YAAaV,GACbW,aAAcR,KApBF,QAwBlB7P,GAAmB,aAAc,CAAExI,KAAMyZ,EAAgBhc,KAAMuT,IAxB7C,4CAAH,sDAgCX3D,GACJ3D,GAAe2M,GAA6BE,EAE9CvM,qBAAU,WACR,IAAIqC,EAMJ,OALIgB,GACFhB,EAAUzQ,OAAOzC,YAAW,WAC1Bud,GAAkB,KtClPS,KsCoP1BA,GAAkB,GAChB,WACLpK,aAAaD,MAEd,CAACgB,KAEJrD,qBAAU,WACJgH,IAAavV,EAAU8V,OAAyB,SAAhBoF,GAClCqB,GAAkBV,QAAQ/W,MAAM/D,KAEjC,CAACma,EAAaqB,GAAmBhH,IAEpC,IAAI+I,GAAqC,KAIzC,OAHI3D,EAAQ2D,GAAiB3D,EACpB/I,IAAWoJ,IAAgBsD,GAAiB,cAAC,KAAD,KAGnD,eAAC,KAAD,CACEpD,YAAaA,EACbqD,OACE,eAAC,KAAD,WACE,cAAC,KAAD,CACEtO,KAAK,6CACLkI,SAA0B,SAAhB+C,EACVvc,QAAS,WACPwc,EAAe,QACfE,EAAe,SALnB,SAQE,cAAC,KAAD,MAEF,cAAC,KAAD,CACEpL,KAAK,6CACLkI,SAA0B,eAAhB+C,EACVvc,QAhDe,WACvBwc,EAAe,cACfE,EAAe,oBA2CT,SAKE,cAAC,KAAD,SAnBR,UAwBE,eAAC,KAAD,CAAMxT,GAAG,OAAOuT,YAAaA,EAAaT,OAAQ2D,GAAlD,UACE,cAAC,KAAD,CAAOzW,GAAG,OAAV,SACE,cAAC,GAAD,CACEkG,KAAMA,EACN0D,kBAAmB,kBAAMiM,GAAwB1d,EAAUme,SAC3DzM,uBAAwB,WACtB8J,EAAYxb,EAAU8V,OACtBuF,EAAe,mCAEjB1J,aAAc,SAACS,GAAD,OAAiBpE,EAAQoE,QAG3C,cAAC,KAAD,CAAOvK,GAAG,iCAAV,SACE,cAAC,GAAD,CACEwR,YAAa,WACXgC,EAAe,qBAEjB/B,OAAQ,WACN+B,EAAe,0BAEjBhG,SAAUoI,OAGd,cAAC,KAAD,CAAO5V,GAAG,mBAAV,SACE,cAAC,GAAD,CACEwN,SAAU,WACJE,IAAavV,EAAU8V,MACzBuF,EAAe,kCACZoC,MAEPlF,SAAU2F,OAGd,cAAC,KAAD,CAAOrW,GAAG,wBAAV,SACE,cAAC,GAAD,CACEyR,OAAQ,SAACkF,GACP1B,GAAoB0B,IAEtBhF,OAAQ,WACN6B,EAAe,uCAIrB,cAAC,KAAD,CAAOxT,GAAG,QAAV,SACE,cAAC,GAAD,CACE6H,eAAgBuM,EAChB5G,SAAU,WACRqI,GAAwBnI,GACxBgH,GAAkBV,QAAQ/W,MACxB/D,QAKR,cAAC,KAAD,CAAO8G,GAAG,SAAV,SACE,cAAC,GAAD,CACEwN,SAAU,WACRqI,GAAwBnI,GACpBA,IAAavV,EAAU8V,OACzByG,GAAkBV,QAAQ/W,MACxB/D,IAGNuU,aAAcA,GACd9F,SAAUA,EACV+F,SAAUA,EACVC,KAAMA,OAGV,eAAC,KAAD,CAAO3N,GAAG,UAAV,UACG0N,IAAavV,EAAUme,QACtB,cAAC,GAAD,CACEpQ,KAAMA,EACNuI,QAAS,kBAAM4H,GAAY1O,IAC3B6F,SAAUoI,GACVnJ,OAAQA,EACR3C,aAAc,SAACS,GAAD,OAAiBpE,EAAQoE,MAG1CmD,IAAavV,EAAU8V,OACtB,cAAC,GAAD,CACET,SAAU,WACRoI,KACAlB,GAAkBV,QAAQ/W,MACxB/D,IAGJ+Y,MAAOuC,GACPtC,cACGkC,GAAsBA,EAAmB9C,QAAQtE,QAAW,UAMvE,cAAC,KAAD,CAAMhN,GAAG,aAAauT,YAAaA,EAAaT,OAAQA,EAAxD,SACE,cAAC,KAAD,CAAO9S,GAAG,kBAAV,SACE,cAAC,GAAD,CAAgBkG,KAAMA,Y,wEEjZnB0Q,GAAb,6GACyB/T,GACrB,IAD6D,EACvD2C,EAAS,GACTqR,EAAe,IAAIxe,gBAAgBwK,GAFoB,eAIlCgU,EAAaC,WAJqB,IAI7D,2BAAmD,CAAC,IAAD,yBAAvC1f,EAAuC,KAAlCC,EAAkC,KACjD,GAAID,EAAIgU,WAAW,WAEjB5F,EADwBpO,EAAI2f,QAAQ,YAAa,KACvB1f,GAP+B,8BAU7D,OAAOmO,IAXX,2CAeI,OAAO,6BACFoR,EAAmBI,gBAAgB1e,OAAOC,SAASC,SACnDoe,EAAmBI,gBAAgB1e,OAAOC,SAASG,KAAKC,MAAM,SAjBvE,KC6Bese,OAff,YAAsE,IAAvC/Q,EAAsC,EAAtCA,KAAM1P,EAAgC,EAAhCA,SACnC,GAAa,OAAT0P,EAAe,OAAO1P,EAC1B,IAAM0gB,EAAwC,CAC5CC,KAAM,CACJC,iBANY9gB,uCAOZc,IAAKqH,OAAOyH,EAAKjG,QAOrB,OAJKxK,EAAMY,mBACT6gB,EAAYC,KAAKC,iBAAmB,YACpCF,EAAYG,SAAWT,GAAmBU,sBAErC,cAACC,GAAA,EAAD,CAAcC,OAAQN,EAAtB,SAAoC1gB,KC8C9BihB,OA9Df,WAAoC,IAAD,EACLxR,mBAA6B,MADxB,mBAC1B6M,EAD0B,KAClB4E,EADkB,KA2CjC,OAxCAhR,qBAAU,WACJjR,EAAMY,kBACRshB,KAAY,CACVC,IAAKthB,4EACLuhB,WAFU,SAECjc,EAAOkc,GAChB,GAAIlc,EAAMmc,UAAW,CACnB,IAAMC,EACJF,GACAA,EAAKG,mBACLH,EAAKG,6BAA6Bzc,OAClCsc,EAAKG,kBAAkBphB,QACnBihB,EAAKG,kBAAkBphB,QACvB,GACN6gB,EACE,eAAC,KAAD,CACEQ,QAAS,CACP,CACE/d,KAAM,UACNge,MAAO,eACPC,WAAW,IAGftd,QAAS,kBAAM4c,EAAU,OAR3B,UAUE,0HACCM,GACC,mBAAGxM,UAAW4G,KAAO4F,aAArB,SAAoCA,IAEtC,2HAIN,OAAOpc,KAIbsJ,KACAA,GAAmB,cAClB,IAGD,cAAC,GAAD,UACG,YAAkD,IAA/CkB,EAA8C,EAA9CA,YAAaF,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASQ,EAAkB,EAAlBA,YAC9B,OACE,cAAC,GAAD,CAAqBT,KAAMA,EAA3B,SACE,cAAC,GAAD,CACEA,KAAMA,EACNE,YAAaA,EACbD,QAASA,EACTQ,YAAaA,EACbmM,OAAQA,UCrDtBvN,IAAO/L,KAAK,gBAEZ+L,IAAO8S,WAAU,YAAiC,IAAD,IAA7BxZ,OAAUnC,EAAmB,EAAnBA,KAAMrD,EAAa,EAAbA,KAClC,GAAa,yBAATqD,EAAiC,CACnC,IAAM4b,EAAkBpW,SAASqW,gBAAgB,UAEjDD,EAAgBjhB,MAAQgC,EAAKmf,QAAU,eACvCtW,SAAS9H,KAAKvC,WAAW4gB,aAAaH,OAKxCI,iBACE,cAAC,IAAMC,WAAP,UACE,cAACpiB,EAAD,UACE,cAAC,GAAD,QAGJ2L,SAAS0W,eAAe,SAKvBnjB,EAAMY,kBAKT,qD,mBCrCFd,EAAOC,QAAU,CAAC,UAAY,sCAAsC,cAAgB,0CAA0C,WAAa,uCAAuC,eAAiB,2CAA2C,QAAU,oCAAoC,KAAO,iCAAiC,QAAU,oCAAoC,WAAa,uCAAuC,kBAAoB,iD","file":"static/js/main.b2d34330.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"App_errorMessage__29Ukm\"};","export class Utils {\n  static isProductionMode = process.env.NODE_ENV === 'production'\n\n  /**\n   * Wait for passed number of ms\n   * @param time in ms\n   */\n  static async waitForTimeout(time: number): Promise<void> {\n    await new Promise((res) => setTimeout(res, time))\n  }\n\n  /**\n   * Wait till passed timestamp in ms\n   * @param timestamp in seconds\n   */\n  static async waitTillTimestamp(timestamp: number): Promise<void> {\n    const now = new Date().getTime()\n    const diff = timestamp - now\n    if (diff > 0) return Utils.waitForTimeout(diff)\n    return Promise.resolve()\n  }\n}\n","import React from 'react'\nimport PropTypes, { InferProps } from 'prop-types'\nimport * as Sentry from '@sentry/react'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\nimport { Utils } from '../Utils'\n\n/**\n * Component catches only errors in rendering phase and lifecycle\n * Error in click and async handlers need to be caught and rendered separately\n */\nexport function ErrorBoundary({\n  children,\n}: InferProps<typeof ErrorBoundary.propTypes>): JSX.Element {\n  if (!Utils.isProductionMode) return children\n\n  return (\n    <Sentry.ErrorBoundary\n      fallback={({ error, componentStack, resetError }) => (\n        <>\n          <div>Ошибка отрисовки:</div>\n          <p>{error.message}</p>\n          <p>{componentStack}</p>\n          <Button onClick={resetError}>Попробовать еще раз</Button>\n        </>\n      )}\n    >\n      {children}\n    </Sentry.ErrorBoundary>\n  )\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.element.isRequired,\n}\n","import fromJSON from 'tcomb/lib/fromJSON'\nimport { Struct, struct, StructProps } from 'tcomb'\nimport camelCase from 'lodash.camelcase'\nimport upperFirst from 'lodash.upperfirst'\n\nfunction getFromObject<T>(Model: ModelType<T>) {\n  return function fromObject(object: Record<string, unknown>) {\n    return fromJSON<T>(object, Model)\n  }\n}\n\nfunction set(key: string, value: unknown) {\n  return this.constructor.update(this, {\n    [key]: {\n      $set: value,\n    },\n  })\n}\n\nconst models = new Map()\n\nexport interface ModelType<T> extends Struct<T> {\n  fromObject(object: Record<string, unknown>): T\n}\n\nexport interface ModelInstance {\n  set(key: string, value: unknown): this\n}\n\nexport function createModel<T>(\n  attributes: StructProps,\n  name: string,\n  defaultProps = {}\n): ModelType<T> {\n  // @ts-ignore\n  const Model: ModelType<T> = struct(attributes, {\n    name,\n    defaultProps,\n  })\n\n  Model.fromObject = getFromObject<T>(Model)\n  Model.prototype.set = set\n\n  models.set(name, Model)\n\n  return Model\n}\n\nexport function extendModel<T>(\n  baseClass: ModelType<Record<string, unknown>>,\n  props: StructProps,\n  name: string\n): ModelType<T> {\n  // @ts-ignore\n  const Model: ModelType<T> = baseClass.extend(props, name)\n\n  Model.fromObject = getFromObject<T>(Model)\n  Model.prototype.set = set\n\n  return Model\n}\n\nexport function getModelByName(\n  name: string\n): ModelType<Record<string, unknown>> {\n  const modelName = upperFirst(camelCase(name))\n  if (!models.has(modelName))\n    throw new Error(\n      `No model with name \"${modelName}\" (converted from \"${name}\") found`\n    )\n  return models.get(modelName)\n}\n","export class URLUtils {\n  static getSearchParam(name: string): string {\n    const urlParams = new URLSearchParams(window.location.search)\n    return urlParams.get(name)\n  }\n\n  static getHashParam(name: string): string {\n    const hashParams = new URLSearchParams(window.location.hash.slice(1))\n    return hashParams.get(name)\n  }\n}\n","export const NOTIFICATIONS_STATUSES = {\n  ALLOW: 'allow',\n  BLOCK: 'block',\n  TO_BE_REQUESTED: 'to be requested',\n}\n\nexport const GAME_TYPES = {\n  WORD: 'word',\n  PICTURE: 'picture',\n} as const\n\ntype GameTypesKeys = keyof typeof GAME_TYPES\nexport type GameType = typeof GAME_TYPES[GameTypesKeys]\n\nexport enum GameModes {\n  single = 'single',\n  multi = 'multi',\n}\n\nexport const DELAY_BEFORE_LOADER = 200\n","import { timeout } from 'promise-timeout'\nimport { toCamel, toSnake } from 'convert-keys'\nimport castArray from 'lodash.castarray'\nimport { getModelByName, ModelInstance, ModelType } from './model-utils'\nimport { Utils } from '../Utils'\nimport { URLUtils } from '../URLUtils'\nimport camelCase from 'lodash.camelcase'\nimport pickBy from 'lodash.pickby'\n\nconst API_HOST = process.env.REACT_APP_API_HOST\nconst isApiUsingSSL = API_HOST.includes('https://')\nconst websocketProtocol = isApiUsingSSL ? 'wss://' : 'ws://'\nconst INTERNAL_SERVER_ERROR = 'Внутренняя ошибка сервера'\n\nconst websocketCloseCodeToError = {\n  3000: 'Не авторизован',\n}\n\nexport const frontendWebsocketCloseCodes = {\n  FINISH_GAME: 3001,\n  CLOSE_GAME: 3002,\n}\n\ntype Data = Record<string, unknown>\n\ntype WSInputData = {\n  type: string\n  model?: string\n  data?: Data\n  instance?: Data\n}\n\ntype SocketProps =\n  | {\n      onMessage?(data: unknown): void\n      onOpen?(ev: Event): void\n      onClose?(event: CloseEvent): void\n      onError?(): void\n    }\n  | Record<string, (data: unknown) => void>\n\nexport interface JsonWebSocket extends WebSocket {\n  sendJson(data: Data): void\n  sendEvent(name: string, data?: Data): void\n}\n\nexport class ApiService {\n  static async post<T>(\n    url: string,\n    data: Data,\n    { sendToken = true, expand = '', Model = null } = {}\n  ): Promise<T> {\n    return ApiService.send<T>(url, {\n      data: ApiService.convertDataToBackendFormat(data),\n      sendToken,\n      method: 'POST',\n      expand,\n      Model,\n    })\n  }\n\n  static async patch<T>(\n    url: string,\n    data: Data,\n    { sendToken = true, expand = '', Model = null } = {}\n  ): Promise<T> {\n    return ApiService.send<T>(url, {\n      data: ApiService.convertDataToBackendFormat(data),\n      sendToken,\n      method: 'PATCH',\n      expand,\n      Model,\n    })\n  }\n\n  static async get<T>(\n    url: string,\n    { expand = '', Model = null } = {}\n  ): Promise<T> {\n    return ApiService.send<T>(url, {\n      sendToken: true,\n      method: 'GET',\n      expand,\n      Model,\n    })\n  }\n\n  static async send<T>(\n    url: string,\n    {\n      data,\n      sendToken,\n      method,\n      expand,\n      Model = null,\n    }: {\n      data?: Data\n      sendToken: boolean\n      method: string\n      expand?: string\n      Model?: ModelType<unknown>\n    }\n  ): Promise<T> {\n    const urlParams = new URLSearchParams()\n    if (expand) {\n      const expandString = castArray(expand).join(',')\n      urlParams.append('expand', expandString)\n    }\n    const options: RequestInit = {\n      headers: ApiService.createHeaders({ sendToken }),\n    }\n    if (method !== 'GET') {\n      options.mode = 'cors'\n      options.body = JSON.stringify(data)\n    }\n    options.method = method\n    const response = await timeout(\n      fetch(ApiService.createFullApiURL(url, urlParams), options),\n      10000\n    )\n    return ApiService.processResponse<T>(response, Model)\n  }\n\n  static openSocketConnection(\n    url: string,\n    {\n      onMessage = () => {},\n      onOpen = () => {},\n      onClose = () => {},\n      onError = () => {},\n      ...customEventListeners\n    }: SocketProps\n  ): JsonWebSocket {\n    const fullUrl = ApiService.createFullSocketURL(url)\n\n    const parseAndCallOnMessage = (event: MessageEvent) => {\n      const inputData: WSInputData = JSON.parse(event.data)\n      let parsedInstance: ModelInstance | null = null\n      if (inputData.instance) {\n        const Model: ModelType<Record<string, unknown>> | null = getModelByName(\n          inputData.model\n        )\n        parsedInstance = ApiService.convertDataToFrontendFormat<ModelInstance>(\n          inputData.instance,\n          Model\n        )\n      }\n      let parsedData: Data | null = null\n      if (inputData.data) {\n        parsedData = ApiService.convertDataToFrontendFormat(inputData.data)\n      }\n\n      const eventName: string = camelCase(inputData.type)\n      const hasCustomListener = Object.prototype.hasOwnProperty.call(\n        customEventListeners,\n        eventName\n      )\n      const props = {\n        type: inputData.type,\n        data: parsedData,\n        instance: parsedInstance,\n      }\n      if (hasCustomListener) {\n        customEventListeners[eventName](props)\n      }\n\n      onMessage(props)\n    }\n\n    const throwOnClose = (e: CloseEvent) => {\n      const userFriendlyMessage =\n        websocketCloseCodeToError[e.code] || INTERNAL_SERVER_ERROR\n      if (!websocketCloseCodeToError[e.code])\n        // eslint-disable-next-line no-console\n        console.error(`Ошибка вебсокета #${e.code}`)\n      throw new Error(userFriendlyMessage)\n    }\n\n    const throwOnError = () => {\n      throw new Error('Неизвестная ошибка соединения')\n    }\n\n    const socket: WebSocket = new WebSocket(fullUrl)\n    socket.addEventListener('message', parseAndCallOnMessage)\n    socket.addEventListener('close', throwOnClose)\n    socket.addEventListener('close', onClose)\n    socket.addEventListener('error', throwOnError)\n    socket.addEventListener('error', onError)\n\n    const originalClose = socket.close\n    socket.close = (...args) => {\n      socket.removeEventListener('close', throwOnClose)\n      originalClose.apply(socket, args)\n    }\n\n    // @ts-ignore\n    socket.sendJson = function sendJson(this: JsonWebSocket, data: Data) {\n      socket.send(JSON.stringify(data))\n    }\n    // @ts-ignore\n    socket.sendEvent = function sendEvent(\n      this: JsonWebSocket,\n      name: string,\n      data?: Data\n    ) {\n      this.sendJson(\n        pickBy(\n          {\n            type: name,\n            data,\n          },\n          (value) => value\n        )\n      )\n    }\n\n    const jsonSocket = <JsonWebSocket>socket\n\n    const authenticate = () => {\n      jsonSocket.sendEvent('authenticate', {\n        authorization: ApiService.getAuthorizationHeader(),\n      })\n    }\n    socket.addEventListener('open', authenticate)\n    socket.addEventListener('open', onOpen)\n\n    return jsonSocket\n  }\n\n  static createHeaders({\n    sendToken,\n  }: { sendToken?: boolean } = {}): HeadersInit {\n    const headers: HeadersInit = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }\n    if (sendToken) {\n      headers.Authorization = ApiService.getAuthorizationHeader()\n    }\n    return headers\n  }\n\n  static getAuthorizationHeader(): string {\n    if (URLUtils.getSearchParam('fake_vk_id')) {\n      if (Utils.isProductionMode)\n        throw new Error('You cannot use fake_vk_id in production')\n      return ApiService.getFakeVKIDAuthHeader()\n    }\n    return ApiService.getQueryStringAuthHeader()\n  }\n\n  static getQueryStringAuthHeader(): string {\n    const queryString = window.location.search.slice(1)\n    return `QueryString ${queryString}`\n  }\n\n  static getFakeVKIDAuthHeader(): string {\n    const fakeVkID = URLUtils.getSearchParam('fake_vk_id')\n    return `FakeVKID ${fakeVkID}`\n  }\n\n  static createFullApiURL(\n    relativeUrl: string,\n    queryParams?: URLSearchParams\n  ): string {\n    return ApiService.createFullUrl(`api/${relativeUrl}`, queryParams)\n  }\n\n  static createFullSocketURL(relativeUrl: string): string {\n    const fullRelativeUrl = `ws/${relativeUrl}`\n    let domain = ApiService.removeTrailingSlash(API_HOST)\n    domain = domain.slice(domain.indexOf('://') + 3)\n    return `${websocketProtocol}${domain}/${fullRelativeUrl}`\n  }\n\n  static createFullUrl(\n    relativeUrl: string,\n    queryParams?: URLSearchParams\n  ): string {\n    const domain = ApiService.removeTrailingSlash(API_HOST)\n    let url = `${domain}/${relativeUrl}`\n    if (queryParams && String(queryParams)) {\n      url += `?${String(queryParams)}`\n    }\n    return url\n  }\n\n  static async processResponse<T>(\n    response: Response,\n    Model: ModelType<unknown> = null\n  ): Promise<T> {\n    if (response.status >= 500 && response.status < 600) {\n      throw new Error(INTERNAL_SERVER_ERROR)\n    }\n    let json: {\n      detail?: string\n    }\n    try {\n      json = await response.json()\n    } catch (e) {\n      throw new Error('Неверный ответ сервера')\n    }\n    if (!response.ok) {\n      if (json.detail) {\n        throw new Error(json.detail)\n      }\n      throw new Error('Неизвестная ошибка приложения')\n    }\n    return ApiService.convertDataToFrontendFormat<T>(json, Model)\n  }\n\n  static convertDataToBackendFormat(data: Data): Data {\n    return toSnake(data)\n  }\n\n  static convertDataToFrontendFormat<T>(data: Data, Model = null): T {\n    const camelCased: T = toCamel(data)\n    if (Model) {\n      return Model.fromObject(camelCased)\n    }\n    return camelCased\n  }\n\n  static removeTrailingSlash(url: string): string {\n    return url.endsWith('/') ? url.slice(0, -1) : url\n  }\n}\n","import tcomb, { irreducible, refinement } from 'tcomb'\n\nexport const Null = irreducible('Null', (value) => value === null)\n\nexport const PositiveNumber = refinement(\n  tcomb.Number,\n  (n) => n >= 0,\n  'PositiveNumber'\n)\n\nexport const ID = refinement(tcomb.Number, (n) => n >= 1, 'ID')\n","import { createModel, ModelInstance } from './model-utils'\nimport tcomb from 'tcomb'\nimport { ID, PositiveNumber } from './tcomb-types'\nimport { NOTIFICATIONS_STATUSES } from '../constants'\n\nconst attributes = {\n  id: ID,\n  vkId: ID,\n  firstName: tcomb.String,\n  lastName: tcomb.String,\n  photoUrl: tcomb.String,\n  score: PositiveNumber,\n  monthlyScore: PositiveNumber,\n  foreverRank: PositiveNumber,\n  monthlyRank: PositiveNumber,\n  notificationsStatus: tcomb.enums.of(\n    Object.values(NOTIFICATIONS_STATUSES),\n    'notificationsStatus'\n  ),\n}\n\nexport interface UserInstance extends ModelInstance {\n  id: number\n  vkId: number\n  firstName: string\n  lastName: string\n  photoUrl: string\n  score: number\n  monthlyScore: number\n  foreverRank: number\n  monthlyRank: number\n  notificationsStatus: 'allow' | 'block' | 'to be requested'\n}\n\nexport class User extends createModel<UserInstance>(attributes, 'User') {}\n","export interface TrackerInterface {\n  AUTOMATIC_OPERATIONS: Array<string>\n  init: () => Promise<void>\n  identify: (id: number, vkId: number) => Promise<void>\n  reachGoal: (name: string, params?: Record<string, unknown>) => Promise<void>\n}\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\ntype TrackerInput = Optional<TrackerInterface, 'AUTOMATIC_OPERATIONS'>\n\nexport const createTracker = (tracker: TrackerInput): TrackerInterface => ({\n  AUTOMATIC_OPERATIONS: ['*'],\n  ...tracker,\n})\n","import { createTracker, TrackerInterface } from './tracker-utils'\n\nconst METRIKA_ID = process.env.REACT_APP_METRIKA_ID\n\nexport const MetrikaTracker: TrackerInterface = createTracker({\n  async init(): Promise<void> {\n    /* eslint-disable */\n    ;(function(m, e, t, r, i, k, a) {\n      m[i] =\n        m[i] ||\n        function() {\n          ;(m[i].a = m[i].a || []).push(arguments)\n        }\n      // @ts-ignore\n      m[i].l = 1 * new Date()\n      ;(k = e.createElement(t)),\n        (a = e.getElementsByTagName(t)[0]),\n        (k.async = 1),\n        (k.src = r),\n        a.parentNode.insertBefore(k, a)\n    })(window, document, 'script', 'https://mc.yandex.ru/metrika/tag.js', 'ym')\n\n    try {\n      // @ts-ignore\n      ym(METRIKA_ID, 'init', {\n        clickmap: true,\n        trackLinks: true,\n        accurateTrackBounce: true,\n        webvisor: true,\n      })\n    } catch (e) {\n      console.log('Seems like Yandex metrika is blocked')\n      console.warn(e)\n    }\n    /* eslint-enable */\n  },\n\n  async identify(id: number, vkId: number): Promise<void> {\n    try {\n      // @ts-ignore\n      window.ym(METRIKA_ID, 'userParams', {\n        UserID: id,\n        vkId,\n      })\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('Seems like Yandex metrika is blocked')\n      // eslint-disable-next-line no-console\n      console.warn(e)\n    }\n  },\n\n  reachGoal(name: string, params?: Record<string, unknown>): Promise<void> {\n    return new Promise((res) => {\n      try {\n        // @ts-ignore\n        window.ym(METRIKA_ID, 'reachGoal', name, params, () => res())\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log('Seems like Yandex metrika is blocked')\n        // eslint-disable-next-line no-console\n        console.warn(e)\n      }\n    })\n  },\n})\n","import posthog from 'posthog-js'\nimport { timeout } from 'promise-timeout'\nimport { createTracker, TrackerInterface } from './tracker-utils'\nimport { URLUtils } from '../../URLUtils'\n\nconst POSTHOG_ID = process.env.REACT_APP_POSTHOG_ID\n\nlet initPromise: Promise<void> | null = null\n\nasync function waitForInit(): Promise<void> {\n  if (initPromise === null) {\n    throw new Error('Tracker was not initialized')\n  }\n  await initPromise\n}\n\nexport const PosthogTracker: TrackerInterface = createTracker({\n  init(): Promise<void> {\n    initPromise = new Promise<void>((res) => {\n      posthog.init(POSTHOG_ID, {\n        autocapture: false,\n        loaded: () => res(),\n      })\n    })\n    return timeout<void>(initPromise, 10000)\n  },\n\n  async identify(id: number, vkId: number): Promise<void> {\n    await waitForInit()\n    const userParams = {\n      vkId,\n      'utm source': URLUtils.getHashParam('utm_source') || '',\n    }\n    posthog.identify(String(id))\n    posthog.people.set_once(userParams)\n    posthog.register_once(userParams)\n  },\n\n  async reachGoal(\n    name: string,\n    params?: Record<string, unknown>\n  ): Promise<void> {\n    await waitForInit()\n    posthog.capture(name, params)\n  },\n})\n","/* eslint-disable no-console */\nimport { createTracker, TrackerInterface } from './tracker-utils'\n\nexport const LocalTracker: TrackerInterface = createTracker({\n  async init(): Promise<void> {\n    console.log('Init tracker')\n  },\n\n  async identify(id: number, vkId: number): Promise<void> {\n    console.log(`linked session with userId ${id}, vkId ${vkId}`)\n  },\n\n  async reachGoal(\n    name: string,\n    params?: Record<string, unknown>\n  ): Promise<void> {\n    if (!params) console.log(`Reach goal ${name}`)\n    else console.log(`Reach goal ${name} with params`, params)\n  },\n})\n","import { Utils } from '../../Utils'\n\nexport const VkPixelTracker = {\n  AUTOMATIC_OPERATIONS: ['init'],\n\n  init(): void {\n    const vkOpenApiScript = document.createElement('script')\n    vkOpenApiScript.type = 'application/javascript'\n    vkOpenApiScript.async = true\n    vkOpenApiScript.src = 'https://vk.com/js/api/openapi.js?168'\n    vkOpenApiScript.onload = () => {\n      // @ts-ignore\n      window.VK.Retargeting.Init(process.env.REACT_APP_VK_PIXEL_ID)\n      // @ts-ignore\n      window.VK.Retargeting.Hit()\n    }\n    document.head.appendChild(vkOpenApiScript)\n  },\n\n  reachGoal(name: string): void {\n    if (Utils.isProductionMode) {\n      // @ts-ignore\n      window.VK.Goal(name)\n    }\n  },\n}\n","import { createTracker, TrackerInterface } from './tracker-utils'\nimport pickBy from 'lodash.pickby'\nimport { URLUtils } from '../../URLUtils'\nimport { timeout } from 'promise-timeout'\nimport { toSnake } from 'convert-keys'\n\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\n\nlet initPromise: Promise<void> | null = null\n\nasync function waitForInit(): Promise<void> {\n  if (initPromise === null) {\n    throw new Error('Tracker was not initialized')\n  }\n  await initPromise\n}\n\nexport const GoogleAnalyticsTracker: TrackerInterface = createTracker({\n  init(): Promise<void> {\n    const script = document.createElement('script')\n    script.setAttribute('async', '1')\n    script.setAttribute(\n      'src',\n      `https://www.googletagmanager.com/gtag/js?id=${GOOGLE_ANALYTICS_ID}`\n    )\n    document.body.append(script)\n    /* eslint-disable */\n    ;(() => {\n      // @ts-ignore\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        // @ts-ignore\n        dataLayer.push(arguments)\n      }\n      // @ts-ignore\n      window.gtag = gtag\n      // @ts-ignore\n      gtag('js', new Date())\n\n      // @ts-ignore\n      gtag('config', GOOGLE_ANALYTICS_ID)\n    })()\n    /* eslint-enable */\n    /* eslint-disable no-console */\n    initPromise = new Promise((res) => {\n      script.addEventListener('load', () => res())\n    })\n    return timeout<void>(initPromise, 10000)\n  },\n\n  async identify(id: number, vkId: number): Promise<void> {\n    await waitForInit()\n    const userParams = pickBy(\n      {\n        utmSource: URLUtils.getHashParam('utm_source'),\n      },\n      (param) => param\n    )\n    try {\n      // @ts-ignore\n      gtag(\n        'set',\n        'user_properties',\n        // Google Analytics does not support spaces in user properties\n        toSnake({\n          id,\n          vkId,\n          ...userParams,\n        })\n      )\n    } catch (e) {\n      console.log('Seems like Google analytics is blocked')\n      console.warn(e)\n    }\n  },\n  async reachGoal(\n    name: string,\n    params?: Record<string, unknown>\n  ): Promise<void> {\n    await waitForInit()\n\n    try {\n      // @ts-ignore\n      gtag('event', name, params)\n    } catch (e) {\n      console.log('Seems like Google analytics is blocked')\n      console.warn(e)\n    }\n  },\n})\n","import mixpanel from 'mixpanel-browser'\nimport { createTracker, TrackerInterface } from './tracker-utils'\nimport { URLUtils } from '../../URLUtils'\n\nconst MIXPANEL_ID = process.env.REACT_APP_MIXPANEL_ID\n\nexport const MixpanelTracker: TrackerInterface = createTracker({\n  async init() {\n    mixpanel.init(MIXPANEL_ID)\n  },\n\n  async identify(id: number, vkId: number): Promise<void> {\n    const userParams = {\n      'vk id': vkId,\n      'utm source': URLUtils.getHashParam('utm_source') || '',\n    }\n    mixpanel.identify(String(id))\n    mixpanel.people.set_once(userParams)\n    mixpanel.register_once(userParams)\n  },\n\n  async reachGoal(\n    name: string,\n    params?: Record<string, unknown>\n  ): Promise<void> {\n    mixpanel.track(name, params)\n  },\n})\n","import { Utils } from '../../Utils'\nimport { MetrikaTracker } from './MetrikaTracker'\nimport { PosthogTracker } from './PosthogTracker'\nimport { LocalTracker } from './LocalTracker'\nimport { VkPixelTracker } from './VkPixelTracker'\nimport { GoogleAnalyticsTracker } from './GoogleAnalyticsTracker'\nimport { MixpanelTracker } from './MixpanelTracker'\n\nconst registeredTrackers = Utils.isProductionMode\n  ? [\n      MetrikaTracker,\n      PosthogTracker,\n      VkPixelTracker,\n      GoogleAnalyticsTracker,\n      MixpanelTracker,\n    ]\n  : [LocalTracker]\n\nfunction call(method: string, ...args: Array<unknown>) {\n  registeredTrackers.forEach((tracker) => {\n    if (\n      tracker.AUTOMATIC_OPERATIONS[0] === '*' ||\n      tracker.AUTOMATIC_OPERATIONS.includes(method)\n    )\n      tracker[method](...args)\n  })\n}\n\nexport const trackers = {\n  identify(id: number, vkId: number): void {\n    call('identify', id, vkId)\n  },\n\n  init(): void {\n    call('init')\n  },\n\n  reachGoal(name: string, params?: Record<string, unknown>): void {\n    call('reachGoal', name, params)\n  },\n}\n","import { ApiService } from '../core/ApiService'\nimport { User, UserInstance } from '../core/user-model'\nimport { NOTIFICATIONS_STATUSES } from '../constants'\nimport bridge from '@vkontakte/vk-bridge'\nimport { trackers } from '../core/trackers/trackers'\nimport { URLUtils } from '../URLUtils'\n\nexport class AppService {\n  static areNotificationsEnabledOnVkSide = Boolean(\n    parseInt(URLUtils.getSearchParam('vk_are_notifications_enabled'), 10)\n  )\n\n  static async fetchUserData(): Promise<UserInstance> {\n    return ApiService.get<UserInstance>('user', { Model: User })\n  }\n\n  static async allowNotifications(): Promise<UserInstance> {\n    trackers.reachGoal('allow-notifications')\n    return ApiService.patch<UserInstance>(\n      'user',\n      { notificationsStatus: NOTIFICATIONS_STATUSES.ALLOW },\n      { Model: User }\n    )\n  }\n\n  static async blockNotifications(): Promise<UserInstance> {\n    trackers.reachGoal('block-notifications')\n    return ApiService.patch<UserInstance>(\n      'user',\n      { notificationsStatus: NOTIFICATIONS_STATUSES.BLOCK },\n      { Model: User }\n    )\n  }\n\n  static async requestNotifications(): Promise<UserInstance> {\n    if (AppService.areNotificationsEnabledOnVkSide) {\n      // already allowed in VK, need only to allow on our backend\n      return AppService.allowNotifications()\n    }\n    try {\n      const { result } = await bridge.send('VKWebAppAllowNotifications')\n      if (result) return AppService.allowNotifications()\n    } catch (e) {\n      // rejected\n      if (\n        e.error_type === 'client_error' &&\n        e.error_data &&\n        e.error_data.error_code === 4 &&\n        e.error_data.error_reason === 'User denied'\n      )\n        return AppService.blockNotifications()\n      throw e\n    }\n  }\n}\n","import { useEffect, useState } from 'react'\nimport { UserInstance } from '../../user-model'\nimport { AppService } from '../../../components/AppService'\nimport { NOTIFICATIONS_STATUSES } from '../../../constants'\nimport { trackers } from '../../trackers/trackers'\n\ntype Props = {\n  children({\n    user,\n    loadingUser,\n    setUser,\n    refreshUser,\n  }: {\n    user: UserInstance | null\n    loadingUser: boolean\n    setUser(user: UserInstance): void\n    refreshUser(): void\n  }): JSX.Element\n}\n\nfunction WithUser({ children }: Props): JSX.Element {\n  const [user, setUser] = useState<UserInstance | null>(null)\n  const [loadingUser, setLoadingUser] = useState(false)\n\n  async function fetchUser(isInitialRequest = false) {\n    setLoadingUser(true)\n    try {\n      const fetchedUser = await AppService.fetchUserData()\n      setUser(fetchedUser)\n      if (isInitialRequest) {\n        if (\n          fetchedUser.notificationsStatus === NOTIFICATIONS_STATUSES.ALLOW &&\n          !AppService.areNotificationsEnabledOnVkSide\n        ) {\n          setUser(await AppService.blockNotifications())\n        }\n        trackers.identify(fetchedUser.id, fetchedUser.vkId)\n      }\n    } finally {\n      setLoadingUser(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchUser(true)\n  }, [])\n\n  return children({\n    user,\n    loadingUser,\n    setUser,\n    refreshUser: () => fetchUser(false),\n  })\n}\n\nexport default WithUser\n","import { createModel, ModelInstance } from '../core/model-utils'\nimport tcomb from 'tcomb'\nimport { ID, Null } from '../core/tcomb-types'\n\nconst attributes = {\n  id: ID,\n  question: tcomb.String,\n  answerWords: tcomb.list(tcomb.String),\n  correctAnswer: tcomb.union([Null, tcomb.String]),\n  selectedAnswer: tcomb.union([Null, tcomb.String]),\n  isCorrect: tcomb.Boolean,\n}\n\nexport interface QuestionInstance extends ModelInstance {\n  id: number\n  question: string\n  answerWords: string[]\n  correctAnswer: null | string\n  selectedAnswer: null | string\n  isCorrect: boolean\n}\n\nexport class Question extends createModel<QuestionInstance>(\n  attributes,\n  'Question'\n) {}\n","import { createModel, ModelInstance } from '../core/model-utils'\nimport tcomb from 'tcomb'\nimport { Question, QuestionInstance } from './question-model'\nimport { ID } from '../core/tcomb-types'\n\nconst expandableQuestion = tcomb.union([Question, tcomb.Number])\nexpandableQuestion.dispatch = (x) => {\n  if (typeof x === 'number') return tcomb.Number\n  return Question\n}\n\nconst attributes = {\n  id: ID,\n  questions: tcomb.list(expandableQuestion),\n  points: tcomb.Number,\n}\n\nexport interface GameInstance extends ModelInstance {\n  id: number\n  questions: QuestionInstance[]\n  points: number\n}\n\nexport class Game extends createModel<GameInstance>(attributes, 'Game') {}\n","import { ApiService } from '../../core/ApiService'\nimport { Game, GameInstance } from '../../models/game-model'\nimport { Question, QuestionInstance } from '../../models/question-model'\nimport { GameDefinitionInstance } from '../../models/game-definition-model'\nimport { GameType } from '../../constants'\n\nexport class BattleService {\n  static async startSinglePlayerGame(\n    gameType: GameType\n  ): Promise<GameInstance> {\n    const gameDefinition = await ApiService.post<GameDefinitionInstance>(\n      'game_definition',\n      {\n        type: gameType,\n      }\n    )\n    return ApiService.post<GameInstance>(\n      'game',\n      { gameDefinition: gameDefinition.id },\n      { expand: 'questions', Model: Game }\n    )\n  }\n\n  static async submitQuestion(\n    question: QuestionInstance\n  ): Promise<QuestionInstance> {\n    return ApiService.patch(\n      `question/${question.id}`,\n      {\n        selectedAnswer: question.selectedAnswer,\n      },\n      { Model: Question }\n    )\n  }\n\n  static async getBattle(id: number): Promise<GameInstance> {\n    return ApiService.get(`game/${id}`, { expand: 'questions', Model: Game })\n  }\n}\n","import React from 'react'\nimport { IOS, platform } from '@vkontakte/vkui/'\nimport Icon24Back from '@vkontakte/icons/dist/24/back'\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back'\n\nfunction BackButton(): JSX.Element {\n  const osName = platform()\n  if (osName === IOS) return <Icon28ChevronBack />\n  return <Icon24Back />\n}\n\nexport default BackButton\n","import React from 'react'\nimport PropTypes, { InferProps } from 'prop-types'\nimport {\n  PanelHeaderButton,\n  PanelHeader as VKPanelHeader,\n} from '@vkontakte/vkui'\nimport BackButton from './BackButton'\n\nexport default function PanelHeader({\n  panelHeaderProps,\n  onBackButtonClick,\n  text,\n  showBackButton,\n}: InferProps<typeof PanelHeader.propTypes>): JSX.Element {\n  const vkPanelHeaderProps = { ...panelHeaderProps }\n  if (showBackButton)\n    vkPanelHeaderProps.left = (\n      <PanelHeaderButton onClick={onBackButtonClick}>\n        <BackButton />\n      </PanelHeaderButton>\n    )\n  else vkPanelHeaderProps.left = undefined\n  return <VKPanelHeader {...vkPanelHeaderProps}>{text}</VKPanelHeader>\n}\n\nPanelHeader.propTypes = {\n  onBackButtonClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  panelHeaderProps: PropTypes.shape({\n    left: PropTypes.node,\n  }),\n  showBackButton: PropTypes.bool,\n}\n\nPanelHeader.defaultProps = {\n  panelHeaderProps: {},\n  showBackButton: true,\n  onBackButtonClick: () => {},\n}\n","import React, { useEffect, useState } from 'react'\nimport { PanelSpinner } from '@vkontakte/vkui'\nimport { DELAY_BEFORE_LOADER } from '../../constants'\n\ntype Props = {\n  delay?: number\n  render?(): JSX.Element\n}\n\nfunction Loader({\n  delay = DELAY_BEFORE_LOADER,\n  render = () => <PanelSpinner size=\"large\" />,\n}: Props): JSX.Element {\n  const [pastDelay, setPastDelay] = useState(false)\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setPastDelay(true)\n    }, delay)\n    return () => {\n      clearTimeout(timerId)\n    }\n  }, [delay])\n\n  if (pastDelay) return render()\n  return null\n}\n\nexport default Loader\n","import { useContext } from 'react'\nimport { SplitContext, useTreatments } from '@splitsoftware/splitio-react'\nimport { ISplitContextValues } from '@splitsoftware/splitio-react/types/SplitContext'\n\nconst trueValues = ['on', '1', 'true', 'yes']\n\nexport default function useFeatureFlag(\n  name: string\n): {\n  isReady: boolean\n  enabled: boolean\n} {\n  const { isReady } = useContext<ISplitContextValues>(SplitContext)\n\n  const treatments = useTreatments([name])\n  const value = Boolean(treatments[name]) && treatments[name].treatment\n  const enabled = trueValues.includes(value)\n\n  return {\n    isReady,\n    enabled,\n  }\n}\n","export const MULTIPLAYER = 'multiplayer'\n","import React, { useState } from 'react'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell'\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar'\nimport PanelHeader from '../helpers/PanelHeader'\nimport { Switch } from '@vkontakte/vkui'\nimport { AppService } from '../AppService'\nimport { UserInstance } from '../../core/user-model'\nimport Loader from '../helpers/Loader'\nimport { NOTIFICATIONS_STATUSES } from '../../constants'\nimport useFeatureFlag from '../../core/hooks/use-feature-flag'\nimport { MULTIPLAYER } from '../../core/feature-flags'\n\ntype Props = {\n  onStartSingleGame(): void\n  onStartMultiplayerGame(): void\n  user: UserInstance\n  onUpdateUser(user: UserInstance): void\n}\nconst Home = ({\n  onStartSingleGame,\n  onStartMultiplayerGame,\n  user = null,\n  onUpdateUser,\n}: Props): JSX.Element => {\n  const [loading, setLoading] = useState(false)\n  const { enabled: multiplayerEnabled } = useFeatureFlag(MULTIPLAYER)\n\n  const onSwitchNotifications = async (event) => {\n    const { checked: newChecked } = event.target\n    setLoading(true)\n    try {\n      let updatedUser: UserInstance\n      if (newChecked) {\n        // need to enable\n        updatedUser = await AppService.requestNotifications()\n      } else {\n        // need to disable\n        updatedUser = await AppService.blockNotifications()\n      }\n      onUpdateUser(updatedUser)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <>\n      <PanelHeader text=\"English Clash\" showBackButton={false} />\n      {user && (\n        <Group>\n          <Cell\n            before={user.photoUrl ? <Avatar src={user.photoUrl} /> : null}\n            description={\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <span>Количество очков - {user.score}</span>{' '}\n                <span>Место в рейтинге: {user.foreverRank}</span>\n              </div>\n            }\n            multiline\n          >\n            {`${user.firstName} ${user.lastName}`}\n          </Cell>\n        </Group>\n      )}\n\n      <Group>\n        <Div>\n          <Cell>\n            <Button size=\"xl\" onClick={onStartSingleGame} disabled={loading}>\n              Начать одиночную игру\n            </Button>\n          </Cell>\n          {multiplayerEnabled && (\n            <Cell>\n              <Button\n                size=\"xl\"\n                onClick={onStartMultiplayerGame}\n                disabled={loading}\n              >\n                Играть с другом\n              </Button>\n            </Cell>\n          )}\n        </Div>\n      </Group>\n\n      {user && (\n        <Group>\n          <Cell\n            multiline\n            indicator={\n              <Switch\n                checked={\n                  user.notificationsStatus === NOTIFICATIONS_STATUSES.ALLOW\n                }\n                onChange={onSwitchNotifications}\n                disabled={loading}\n              />\n            }\n          >\n            Уведомления об обновлениях\n          </Cell>\n        </Group>\n      )}\n      {loading && <Loader />}\n    </>\n  )\n}\n\nexport default Home\n","import { ApiService } from '../core/ApiService'\n\nexport class QuestionService {\n  static createFullPictureUrl(relativeUrl: string): string {\n    const relativeUrlWithoutSlash = QuestionService.removePrecedingSlash(\n      relativeUrl\n    )\n    return ApiService.createFullUrl(relativeUrlWithoutSlash)\n  }\n\n  static removePrecedingSlash(url: string): string {\n    return url.startsWith('/') ? url.slice(1) : url\n  }\n}\n","import React from 'react'\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\nimport './Question.css'\nimport clsx from 'clsx'\nimport { QuestionInstance } from '../models/question-model'\nimport { GAME_TYPES } from '../constants'\nimport { QuestionService } from './QuestionService'\nimport { Group } from '@vkontakte/vkui'\n\ninterface Props {\n  question: QuestionInstance\n  gameType: string\n  onSelectAnswer(answer: string)\n}\n\nconst renderQuestionMap = {\n  [GAME_TYPES.WORD]: (questionWord: string) => (\n    <>\n      <p>Слово на английском: {questionWord}</p>\n      <p>Выбери его перевод на русский:</p>\n    </>\n  ),\n  [GAME_TYPES.PICTURE]: (imagePath: string) => (\n    <div className=\"picture-question\">\n      <img\n        src={QuestionService.createFullPictureUrl(imagePath)}\n        alt=\"Картинка с вопросом\"\n      />\n      <span>Это -</span>\n    </div>\n  ),\n}\n\nfunction Question({ question, gameType, onSelectAnswer }: Props): JSX.Element {\n  const {\n    answerWords,\n    selectedAnswer,\n    isCorrect,\n    correctAnswer,\n    question: questionString,\n  } = question\n  const renderQuestion = renderQuestionMap[gameType]\n  return (\n    <Div>\n      <Group>{renderQuestion(questionString)}</Group>\n      {answerWords.map((answer) => {\n        const isCorrectAnswer = answer === correctAnswer\n        const isFailure = !isCorrect && answer === selectedAnswer\n        const classes = clsx('answer-button', {\n          correct: isCorrectAnswer,\n          failure: isFailure,\n        })\n        return (\n          <Button\n            key={answer}\n            size=\"xl\"\n            mode=\"primary\"\n            stretched\n            className={classes}\n            onClick={() => !selectedAnswer && onSelectAnswer(answer)}\n          >\n            {answer}\n          </Button>\n        )\n      })}\n    </Div>\n  )\n}\n\nexport default Question\n","import { GameInstance } from '../../models/game-model'\nimport { QuestionInstance } from '../../models/question-model'\n\nexport const battleActions = {\n  setBattle: 'setBattle',\n  updateQuestion: 'updateQuestion',\n  goToNextQuestion: 'goToNextQuestion',\n}\n\nexport const initialState = {\n  battle: null,\n  activeQuestion: null,\n  hasNextQuestion: false,\n}\n\nexport function battleReducer(\n  state = initialState,\n  action: {\n    type: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    payload?: any\n  }\n): {\n  battle: null | GameInstance\n  activeQuestion: null | QuestionInstance\n  hasNextQuestion: boolean\n} {\n  switch (action.type) {\n    case battleActions.setBattle: {\n      const battle = action.payload\n      const { questions } = battle\n      return {\n        ...state,\n        battle,\n        activeQuestion: questions[0],\n        hasNextQuestion: questions.length > 1,\n      }\n    }\n    case battleActions.updateQuestion: {\n      const updatedQuestion = action.payload\n      const currentQuestions = state.battle.questions\n      const questionIndex = currentQuestions.findIndex(\n        ({ id }) => id === updatedQuestion.id\n      )\n      const questions = [\n        ...currentQuestions.slice(0, questionIndex),\n        updatedQuestion,\n        ...currentQuestions.slice(questionIndex + 1),\n      ]\n      return {\n        ...state,\n        battle: {\n          ...state.battle,\n          questions,\n        },\n        activeQuestion: updatedQuestion,\n      }\n    }\n    case battleActions.goToNextQuestion: {\n      const currentQuestions = state.battle.questions\n      const activeQuestionIndex = currentQuestions.findIndex(\n        ({ id }) => id === state.activeQuestion.id\n      )\n      if (activeQuestionIndex === currentQuestions.length - 1) {\n        throw new Error('Вы уже на последнем вопросе')\n      }\n      const newQuestionIndex = activeQuestionIndex + 1\n      return {\n        ...state,\n        activeQuestion: currentQuestions[newQuestionIndex],\n        hasNextQuestion: newQuestionIndex < currentQuestions.length - 1,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import React, { useEffect, useReducer, useState } from 'react'\nimport PanelHeader from '../helpers/PanelHeader'\nimport { BattleService } from './BattleService'\nimport Question from '../Question'\nimport { Utils } from '../../Utils'\nimport { battleActions, battleReducer, initialState } from './battle-reducer'\nimport Loader from '../helpers/Loader'\nimport { GameInstance } from '../../models/game-model'\nimport { GameModes, GameType } from '../../constants'\nimport useInterval from 'use-interval'\nimport { Div } from '@vkontakte/vkui'\nimport './Battle.css'\n\nconst WAIT_TIME_TO_SHOW_CORRECT_ANSWER = 1000\n\ninterface PropTypes {\n  game?: GameInstance\n  gameType?: GameType\n  gameMode?: GameModes\n  onGoBack()\n  onFinishGame(game: GameInstance)\n}\n\nconst Battle = ({\n  onGoBack,\n  onFinishGame,\n  gameType = null,\n  gameMode = null,\n  game = null,\n}: PropTypes): JSX.Element => {\n  const [loading, setLoading] = useState(false)\n  const [state, dispatch] = useReducer(battleReducer, initialState)\n  const { battle, activeQuestion, hasNextQuestion } = state\n  const [timeBeforeStart, setTimeBeforeStart] = useState<number>(0)\n  const [gameStarted, setGameStarted] = useState(false)\n\n  useEffect(() => {\n    if (game) {\n      dispatch({\n        type: battleActions.setBattle,\n        payload: game,\n      })\n      if (gameMode === GameModes.multi) setTimeBeforeStart(3)\n      else setGameStarted(true)\n    }\n  }, [game, gameMode])\n\n  const decreaseStartMultiplayerGameTime = () => {\n    if (timeBeforeStart === 1) setGameStarted(true)\n    else setTimeBeforeStart(timeBeforeStart - 1)\n  }\n  const intervalDelay = battle && !gameStarted ? 1000 : null\n\n  useInterval(decreaseStartMultiplayerGameTime, intervalDelay)\n\n  const onSelectAnswer = async (answer: string) => {\n    if (loading) return\n    const questionToSubmit = activeQuestion.set('selectedAnswer', answer)\n    setLoading(true)\n    try {\n      const questionWithAnswerData = await BattleService.submitQuestion(\n        questionToSubmit\n      )\n      dispatch({\n        type: battleActions.updateQuestion,\n        payload: questionWithAnswerData,\n      })\n    } finally {\n      setLoading(false)\n    }\n\n    await Utils.waitForTimeout(WAIT_TIME_TO_SHOW_CORRECT_ANSWER)\n\n    if (hasNextQuestion) dispatch({ type: battleActions.goToNextQuestion })\n    else onFinishGame(battle)\n  }\n\n  return (\n    <>\n      <PanelHeader onBackButtonClick={onGoBack} text=\"Игра\" />\n      {gameStarted && activeQuestion && (\n        <Question\n          question={activeQuestion}\n          onSelectAnswer={onSelectAnswer}\n          gameType={gameType}\n        />\n      )}\n      {!gameStarted && (\n        <Div className=\"start-game-timer\">\n          До начала игры: {timeBeforeStart}\n        </Div>\n      )}\n      {loading && <Loader />}\n    </>\n  )\n}\n\nexport default Battle\n","import React from 'react'\nimport Button, {\n  ButtonProps,\n} from '@vkontakte/vkui/dist/components/Button/Button'\nimport Icon24Home from '@vkontakte/icons/dist/24/home'\n\nfunction HomeButton(props: ButtonProps): JSX.Element {\n  return (\n    <Button size=\"l\" before={<Icon24Home />} {...props}>\n      Домой\n    </Button>\n  )\n}\n\nexport default HomeButton\n","import React, { useState } from 'react'\nimport PanelHeader from '../helpers/PanelHeader'\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell'\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\nimport './Results.css'\nimport Icon24Replay from '@vkontakte/icons/dist/24/replay'\nimport { NOTIFICATIONS_STATUSES } from '../../constants'\nimport { AppService } from '../AppService'\nimport { Card, CardGrid, Div } from '@vkontakte/vkui'\nimport Loader from '../helpers/Loader'\nimport { Icon24Cancel } from '@vkontakte/icons'\nimport { UserInstance } from '../../core/user-model'\nimport { GameInstance } from '../../models/game-model'\nimport HomeButton from '../helpers/HomeButton'\n\ntype Props = {\n  user: UserInstance\n  onGoBack(): void\n  onRetry(): void\n  battle: GameInstance\n  onUpdateUser(user: UserInstance): void\n}\n\nfunction SingleplayerResults({\n  user = null,\n  onGoBack,\n  battle = null,\n  onRetry,\n  onUpdateUser,\n}: Props): JSX.Element {\n  const { questions, points } = battle\n  const correctAnswersNumber = questions.filter(({ isCorrect }) => isCorrect)\n    .length\n  const incorrectAnswersNumber = questions.length - correctAnswersNumber\n  const [rejectedNotifications, setRejectedNotifications] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const showNotificationsRequest =\n    user.notificationsStatus === NOTIFICATIONS_STATUSES.TO_BE_REQUESTED\n\n  const navigationButtons = (\n    <div className=\"action-buttons-wrapper\">\n      <HomeButton onClick={onGoBack} />\n      <Button onClick={onRetry} size=\"l\" before={<Icon24Replay />}>\n        Еще раз\n      </Button>\n    </div>\n  )\n\n  async function allowNotifications() {\n    if (loading) return\n    setLoading(true)\n    try {\n      const updatedUser = await AppService.requestNotifications()\n      onUpdateUser(updatedUser)\n      if (updatedUser.notificationsStatus === NOTIFICATIONS_STATUSES.BLOCK) {\n        // if user clicked subscribe, but rejected in VK popup\n        setRejectedNotifications(true)\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  async function blockNotifications() {\n    if (loading) return\n    setLoading(true)\n    try {\n      onUpdateUser(await AppService.blockNotifications())\n      setRejectedNotifications(true)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const notificationRequest = (\n    <CardGrid style={{ marginTop: '10px' }}>\n      <Card size=\"l\" style={{ padding: '10px' }}>\n        <div className=\"notification-request-content\">\n          <span className=\"notification-request-header\">\n            Узнай первым об обновлениях - подпишись на уведомления!\n          </span>\n          <div className=\"notification-buttons-wrapper\">\n            <Button\n              size=\"m\"\n              mode=\"commerce\"\n              className=\"notification-button\"\n              onClick={allowNotifications}\n              disabled={loading}\n            >\n              Подписаться\n            </Button>\n            <Button\n              size=\"m\"\n              mode=\"secondary\"\n              className=\"notification-button\"\n              onClick={blockNotifications}\n              disabled={loading}\n            >\n              Не сейчас\n            </Button>\n          </div>\n          <span className=\"notification-request-close\">\n            <Icon24Cancel onClick={blockNotifications} />\n          </span>\n          <span className=\"notification-request-subtext\">\n            Всегда можно отписаться на главном экране\n          </span>\n        </div>\n      </Card>\n    </CardGrid>\n  )\n  return (\n    <>\n      <PanelHeader text=\"Результаты\" onBackButtonClick={onGoBack} />\n      <Group header={<Header mode=\"secondary\">Статистика</Header>}>\n        <Cell\n          indicator={<Counter mode=\"primary\">{correctAnswersNumber}</Counter>}\n        >\n          Верных ответов:\n        </Cell>\n        <Cell\n          indicator={<Counter mode=\"primary\">{incorrectAnswersNumber}</Counter>}\n        >\n          Неверных ответов:\n        </Cell>\n        <Cell indicator={<Counter mode=\"primary\">{points}</Counter>}>\n          Получено очков:\n        </Cell>\n      </Group>\n      {!showNotificationsRequest && navigationButtons}\n      {showNotificationsRequest && notificationRequest}\n      {rejectedNotifications && (\n        <Div className=\"subscribe-later\">\n          Подписаться можно на главном экране\n        </Div>\n      )}\n      {loading && <Loader />}\n    </>\n  )\n}\n\nexport default SingleplayerResults\n","import tcomb from 'tcomb'\nimport { ID, PositiveNumber } from '../core/tcomb-types'\nimport { createModel, ModelInstance } from '../core/model-utils'\n\nconst attributes = {\n  id: ID,\n  firstName: tcomb.String,\n  lastName: tcomb.String,\n  photoUrl: tcomb.String,\n  score: PositiveNumber,\n}\n\nexport interface ScoreboardUserInstance extends ModelInstance {\n  id: number\n  firstName: string\n  lastName: string\n  photoUrl: string\n  score: number\n}\n\nexport class ScoreboardUser extends createModel<ScoreboardUserInstance>(\n  attributes,\n  'ScoreboardUser'\n) {}\n","import React from 'react'\nimport PropTypes, { InferProps } from 'prop-types'\nimport { Avatar, Counter, SimpleCell } from '@vkontakte/vkui'\n\nfunction ScoreboardItem({\n  rank,\n  score,\n  photoUrl,\n  firstName,\n  lastName,\n}: InferProps<typeof ScoreboardItem.propTypes>): JSX.Element {\n  return (\n    <SimpleCell before={<Counter>{rank}</Counter>} after={score}>\n      <div className=\"scoreboard-item\">\n        <Avatar size={40} src={photoUrl} />\n        <div className=\"scoreboard-item-name\">\n          {firstName} {lastName}\n        </div>\n      </div>\n    </SimpleCell>\n  )\n}\n\nScoreboardItem.propTypes = {\n  rank: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  photoUrl: PropTypes.string.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n}\n\nexport default ScoreboardItem\n","import React, { useEffect, useState } from 'react'\nimport PanelHeader from '../helpers/PanelHeader'\nimport { ApiService } from '../../core/ApiService'\nimport { Div, FixedLayout, Group, List, Tabs, TabsItem } from '@vkontakte/vkui'\nimport { ScoreboardUser } from '../../models/scoreboard-user-model'\nimport './ScoreboardHome.css'\nimport ScoreboardItem from './ScoreboardItem'\nimport Loader from '../helpers/Loader'\nimport { UserInstance } from '../../core/user-model'\n\nconst SCOREBOARD_TYPES = {\n  forever: 'forever',\n  monthly: 'monthly',\n}\n\ninterface Props {\n  user: UserInstance\n}\n\nfunction ScoreboardHome({ user = null }: Props): JSX.Element {\n  const [usersList, setUsersList] = useState<ScoreboardUser[]>([])\n  const [loading, setLoading] = useState(false)\n  const [activeTab, setActiveTab] = useState(SCOREBOARD_TYPES.forever)\n  const [currentUserInScoreboard, setCurrentUserInScoreboard] = useState(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setUsersList([])\n      setLoading(true)\n      const users = await ApiService.get<ScoreboardUser[]>(\n        `${activeTab}_scoreboard`\n      )\n      const currentScoreboardUser = ScoreboardUser.fromObject({ ...user })\n      setCurrentUserInScoreboard(\n        Boolean(users.find(({ id }) => id === currentScoreboardUser.id))\n      )\n      setUsersList(users)\n      setLoading(false)\n    }\n\n    fetchData()\n  }, [activeTab, user])\n\n  return (\n    <>\n      <PanelHeader text=\"Рейтинг\" showBackButton={false} />\n      <FixedLayout vertical=\"top\">\n        <Tabs>\n          <TabsItem\n            selected={activeTab === SCOREBOARD_TYPES.forever}\n            onClick={() => setActiveTab(SCOREBOARD_TYPES.forever)}\n          >\n            За все время\n          </TabsItem>\n          <TabsItem\n            selected={activeTab === SCOREBOARD_TYPES.monthly}\n            onClick={() => setActiveTab(SCOREBOARD_TYPES.monthly)}\n          >\n            За месяц\n          </TabsItem>\n        </Tabs>\n      </FixedLayout>\n      <Div>\n        <Group style={{ paddingTop: '20px' }}>\n          {!loading && (\n            <List>\n              {usersList.map(\n                ({ id, firstName, lastName, photoUrl, score }, index) => (\n                  <ScoreboardItem\n                    rank={index + 1}\n                    score={score}\n                    photoUrl={photoUrl}\n                    firstName={firstName}\n                    lastName={lastName}\n                    key={id}\n                  />\n                )\n              )}\n              {!currentUserInScoreboard && (\n                <ScoreboardItem\n                  rank={\n                    activeTab === SCOREBOARD_TYPES.forever\n                      ? user.foreverRank\n                      : user.monthlyRank\n                  }\n                  score={\n                    activeTab === SCOREBOARD_TYPES.forever\n                      ? user.score\n                      : user.monthlyScore\n                  }\n                  photoUrl={user.photoUrl}\n                  firstName={user.firstName}\n                  lastName={user.lastName}\n                />\n              )}\n            </List>\n          )}\n          {loading && <Loader />}\n        </Group>\n      </Div>\n    </>\n  )\n}\n\nexport default ScoreboardHome\n","import React from 'react'\nimport PanelHeader from '../helpers/PanelHeader'\nimport { Button, Div, Header } from '@vkontakte/vkui'\nimport { GAME_TYPES } from '../../constants'\nimport './ChooseGameType.css'\n\ninterface Props {\n  onGoBack(): void\n  onChoose(type: string): void\n}\n\nfunction ChooseGameType({ onGoBack, onChoose }: Props): JSX.Element {\n  return (\n    <>\n      <PanelHeader text=\"Тип игры\" onBackButtonClick={onGoBack} />\n      <Div>\n        <Header mode=\"primary\">Выбери тип игры:</Header>\n        <div className=\"choose-game-type-body\">\n          <Button size=\"l\" onClick={() => onChoose(GAME_TYPES.PICTURE)}>\n            Картинка\n          </Button>\n          <Button size=\"l\" onClick={() => onChoose(GAME_TYPES.WORD)}>\n            Перевод\n          </Button>\n        </div>\n      </Div>\n    </>\n  )\n}\n\nexport default ChooseGameType\n","import React, { useState } from 'react'\nimport { GameDefinitionInstance } from '../../../models/game-definition-model'\nimport { ApiService } from '../../../core/ApiService'\nimport PanelHeader from '../../helpers/PanelHeader'\nimport { Button, Div, Group, Input, Snackbar } from '@vkontakte/vkui'\nimport { Icon28CopyOutline, Icon28ShareExternalOutline } from '@vkontakte/icons'\nimport './Lobby.css'\nimport bridge from '@vkontakte/vk-bridge'\nimport Loader from '../../helpers/Loader'\n\ntype Props = {\n  gameDefinition?: GameDefinitionInstance\n  onGoBack(): void\n}\n\nconst VK_APP_URL = ApiService.removeTrailingSlash(\n  process.env.REACT_APP_VK_APP_URL\n)\n\nfunction Lobby({ gameDefinition, onGoBack }: Props): JSX.Element {\n  const [copiedToastVisible, setCopiedToastVisible] = useState(false)\n\n  if (!gameDefinition)\n    return (\n      <>\n        <PanelHeader text=\"Игра с друзьями\" onBackButtonClick={onGoBack} />\n        <Loader />\n      </>\n    )\n\n  const inviteUrl = `${VK_APP_URL}#gid=${gameDefinition.id}`\n\n  const copy = async (text: string) => {\n    await bridge.send('VKWebAppCopyText', { text })\n    setCopiedToastVisible(true)\n  }\n  const shareLink = () => bridge.send('VKWebAppShare', { link: inviteUrl })\n\n  const onCloseToast = () => setCopiedToastVisible(false)\n\n  return (\n    <>\n      <PanelHeader text=\"Игра с другом\" onBackButtonClick={onGoBack} />\n      <Group>\n        <Div>\n          <div className=\"method-wrapper\">\n            <div className=\"invite-help-text\">\n              Отправь другому человеку эту ссылку, чтобы он(а) присоединился к\n              игре\n            </div>\n            <div className=\"input-wrapper\">\n              <Input className=\"invite-url-input\" value={inviteUrl} readOnly />\n              <Button\n                onClick={() => copy(inviteUrl)}\n                className=\"copy-button\"\n                before={<Icon28CopyOutline />}\n              >\n                <span className=\"button-subtitle\">Скопировать</span>\n              </Button>\n              <Button\n                onClick={shareLink}\n                className=\"share-button\"\n                before={<Icon28ShareExternalOutline />}\n              >\n                <span className=\"button-subtitle\">Поделиться</span>\n              </Button>\n            </div>\n          </div>\n          <div className=\"method-wrapper second-method\">\n            <div className=\"invite-help-text\">\n              Еще можно присоединиться по ID игры\n            </div>\n            <div className=\"input-wrapper\">\n              <Input\n                className=\"invite-url-input\"\n                value={gameDefinition.id}\n                readOnly\n              />\n              <Button\n                onClick={() => copy(gameDefinition.id)}\n                className=\"copy-button\"\n                before={<Icon28CopyOutline />}\n              >\n                <span className=\"button-subtitle\">Скопировать</span>\n              </Button>\n            </div>\n          </div>\n          <div className=\"loader-wrapper\">\n            <Loader />\n            <span className=\"loader-caption\">\n              Ожидаем подключения второго человека\n            </span>\n          </div>\n          {copiedToastVisible && (\n            <Snackbar onClose={onCloseToast} duration={3000}>\n              Скопировано\n            </Snackbar>\n          )}\n        </Div>\n      </Group>\n    </>\n  )\n}\n\nexport default Lobby\n","import { createModel, ModelInstance } from '../core/model-utils'\nimport tcomb from 'tcomb'\nimport { ID } from '../core/tcomb-types'\nimport { GameType } from '../constants'\n\nconst attributes = {\n  id: tcomb.String,\n  creator: ID,\n  players: tcomb.list(ID),\n  type: tcomb.String,\n}\n\nexport interface GameDefinitionInstance extends ModelInstance {\n  id: string\n  creator: number\n  players: number[]\n  type: GameType\n}\n\nexport class GameDefinition extends createModel<GameDefinitionInstance>(\n  attributes,\n  'GameDefinition'\n) {}\n","import React from 'react'\nimport PanelHeader from '../../helpers/PanelHeader'\nimport { Button, Div, Header } from '@vkontakte/vkui'\nimport './ChooseMultiplayerGameAction.css'\n\ntype Props = {\n  onCreateNew(): void\n  onJoin(): void\n  onGoBack(): void\n}\n\nfunction ChooseMultiplayerGameAction({\n  onCreateNew,\n  onJoin,\n  onGoBack,\n}: Props): JSX.Element {\n  return (\n    <>\n      <PanelHeader text=\"Выбери действие\" onBackButtonClick={onGoBack} />\n      <Div>\n        <Header mode=\"primary\">Выбери действие:</Header>\n        <div className=\"choose-action-buttons-wrapper\">\n          <Button onClick={onCreateNew} size=\"xl\" stretched>\n            Начать новую игру\n          </Button>\n          <Button onClick={onJoin} size=\"xl\" stretched>\n            Присоединиться к существующей\n          </Button>\n        </div>\n      </Div>\n    </>\n  )\n}\n\nexport default ChooseMultiplayerGameAction\n","import React, { useState } from 'react'\nimport PanelHeader from '../../helpers/PanelHeader'\nimport { Button, Div, Input } from '@vkontakte/vkui'\nimport './JoinMultiplayerGame.css'\n\ntype Props = {\n  onJoin(gameDefinitionId: string): void\n  onBack(): void\n}\n\nfunction JoinMultiplayerGame({ onJoin, onBack }: Props): JSX.Element {\n  const [gameId, setGameId] = useState<string>('')\n\n  const onChangeJoinMultiplayerGameId = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setGameId(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    onJoin(gameId)\n  }\n\n  return (\n    <>\n      <PanelHeader text=\"Присоединиться к игре\" onBackButtonClick={onBack} />\n      <Div>\n        <div className=\"join-game-help-text\">\n          Присоединиться к существующей игре по ID:\n        </div>\n        <form onSubmit={onSubmit}>\n          <Input onChange={onChangeJoinMultiplayerGameId} />\n          <Div>\n            <Button type=\"submit\" stretched size=\"xl\">\n              Присоединиться\n            </Button>\n          </Div>\n        </form>\n      </Div>\n    </>\n  )\n}\n\nexport default JoinMultiplayerGame\n","import React from 'react'\nimport { ScoreboardUserInstance } from '../../../models/scoreboard-user-model'\nimport PanelHeader from '../../helpers/PanelHeader'\nimport { Cell, Group } from '@vkontakte/vkui'\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar'\nimport styles from './MultiplayerResults.module.css'\nimport Loader from '../../helpers/Loader'\nimport HomeButton from '../../helpers/HomeButton'\n\nexport type MultiplayerResultItem = {\n  user: ScoreboardUserInstance\n  points: number\n  correctAnswersNumber: number\n  totalQuestions: number\n}\n\ntype Props = {\n  onGoBack(): void\n  items: MultiplayerResultItem[]\n  playersNumber: number\n}\n\nfunction MultiplayerResults({\n  onGoBack,\n  items,\n  playersNumber,\n}: Props): JSX.Element {\n  const loaderText =\n    playersNumber === 2 ? 'ожидаем другого игрока' : 'ожидаем других игроков'\n  return (\n    <>\n      <PanelHeader text=\"Результаты\" onBackButtonClick={onGoBack} />\n      <Group>\n        <div>\n          <Cell>\n            <div className={styles.headerRow}>\n              <span className={styles.nameHeader}>Игрок</span>\n              <span className={styles.answersHeader}>Верных ответов</span>\n              <span>Счет</span>\n            </div>\n          </Cell>\n          {items.map(\n            ({ user, correctAnswersNumber, totalQuestions, points }) => (\n              <Cell key={user.id} className={styles.dataRowWrapper}>\n                <div className={styles.dataRow}>\n                  <Avatar src={user.photoUrl} />\n                  <span className={styles.name}>{user.firstName}</span>\n                  <span className={styles.answers}>\n                    {correctAnswersNumber} из {totalQuestions}\n                  </span>\n                  <span>{points}</span>\n                </div>\n              </Cell>\n            )\n          )}\n        </div>\n        {items.length < playersNumber && (\n          <>\n            <Loader />\n            <div className={styles.loaderText}>{loaderText}</div>\n          </>\n        )}\n        <div className={styles.homeButtonWrapper}>\n          <HomeButton onClick={onGoBack} />\n        </div>\n      </Group>\n    </>\n  )\n}\n\nexport default MultiplayerResults\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport './constant-styles.css'\nimport { Utils } from '../Utils'\nimport { trackers } from '../core/trackers/trackers'\nimport { Epic, Panel, Tabbar, TabbarItem, View } from '@vkontakte/vkui'\nimport { GameInstance } from '../models/game-model'\nimport { BattleService } from './panels/BattleService'\nimport Home from './panels/Home'\nimport Battle from './panels/Battle'\nimport SingleplayerResults from './panels/SingleplayerResults'\nimport { Icon28HomeOutline, Icon28UsersOutline } from '@vkontakte/icons'\nimport ScoreboardHome from './panels/ScoreboardHome'\nimport { DELAY_BEFORE_LOADER, GameModes, GameType } from '../constants'\nimport { UserInstance } from '../core/user-model'\nimport ChooseGameType from './panels/ChooseGameType'\nimport { VkPixelTracker } from '../core/trackers/VkPixelTracker'\nimport Lobby from './panels/Lobby/Lobby'\nimport {\n  GameDefinition,\n  GameDefinitionInstance,\n} from '../models/game-definition-model'\nimport {\n  ApiService,\n  frontendWebsocketCloseCodes,\n  JsonWebSocket,\n} from '../core/ApiService'\nimport { URLUtils } from '../URLUtils'\nimport ChooseMultiplayerGameAction from './panels/ChooseMultiplayerGameAction/ChooseMultiplayerGameAction'\nimport JoinMultiplayerGame from './panels/JoinMultiplayerGame/JoinMultiplayerGame'\nimport MultiplayerResults, {\n  MultiplayerResultItem,\n} from './panels/MultiplayerResults/MultiplayerResults'\nimport { ScoreboardUserInstance } from '../models/scoreboard-user-model'\nimport { FinishedGameData } from '../websocket-data-types'\nimport useStateRef from '../core/hooks/use-state-ref'\nimport useFeatureFlag from '../core/hooks/use-feature-flag'\nimport { MULTIPLAYER } from '../core/feature-flags'\n\ntype Props = {\n  user: UserInstance | null\n  loadingUser: boolean\n  setUser(user: UserInstance): void\n  refreshUser(): void\n  popout: JSX.Element | null\n}\n\nconst App = ({\n  user,\n  loadingUser,\n  setUser,\n  refreshUser,\n  popout,\n}: Props): JSX.Element => {\n  const [loadingMultiplayerGameDef, setLoadingMultiplayerGameDef] = useState(\n    false\n  )\n  const [loadingSinglePlayerGame, setLoadingSinglePlayerGame] = useState(false)\n  const [loadingTooLong, setLoadingTooLong] = useState(false)\n  const [activeStory, setActiveStory] = useState('game')\n  const [activePanel, setActivePanel] = useState('home')\n  const [battle, setBattle] = useState<GameInstance | null>(null)\n  const [gameType, setGameType] = useState<GameType | null>(null)\n  const [gameMode, setGameMode] = useState<GameModes | null>(null)\n  const [\n    multiplayerGameDef,\n    setMultiplayerDameDef,\n    multiplayerGameDefRef,\n  ] = useStateRef<GameDefinitionInstance | null>(null)\n  const [game, setGame] = useState<GameInstance | null>(null)\n  const [multiplayerFinishedItems, setMultiplayerFinishedItems] = useState<\n    MultiplayerResultItem[]\n  >([])\n  const multiplayerSocket = useRef<JsonWebSocket | null>(null)\n  const { enabled: multiplayerEnabled } = useFeatureFlag(MULTIPLAYER)\n\n  const joinedMultiplayerGame = useCallback(\n    ({ instance }: { instance: GameDefinitionInstance }) => {\n      setMultiplayerDameDef(instance)\n    },\n    [setMultiplayerDameDef]\n  )\n\n  const startedMultiplayerGame = useCallback(\n    async (\n      { instance }: { instance: GameInstance },\n      joinedTimestamp?: number\n    ) => {\n      setGame(instance)\n      if (joinedTimestamp) {\n        const SWITCH_PANEL_TIME = 900 // ms\n        // workaround https://github.com/VKCOM/VKUI/issues/177\n        await Utils.waitTillTimestamp(joinedTimestamp + SWITCH_PANEL_TIME)\n      }\n      setActivePanel('battle')\n    },\n    []\n  )\n\n  const finishedMultiplayerGame = useCallback(\n    ({\n      instance,\n      data,\n    }: {\n      instance: ScoreboardUserInstance\n      data: FinishedGameData\n    }) => {\n      setMultiplayerFinishedItems((currentItems) => {\n        if (\n          currentItems.length ===\n          multiplayerGameDefRef.current.players.length - 1\n        ) {\n          multiplayerSocket.current.close(\n            frontendWebsocketCloseCodes.FINISH_GAME\n          )\n        }\n        return [\n          ...currentItems,\n          {\n            user: instance,\n            ...data,\n          },\n        ]\n      })\n    },\n    [multiplayerGameDefRef, multiplayerSocket]\n  )\n\n  useEffect(() => {\n    setMultiplayerFinishedItems([])\n  }, [multiplayerGameDef])\n\n  const joinMultiplayerGame = useCallback(\n    async (gameDefId) => {\n      setLoadingMultiplayerGameDef(true)\n      try {\n        const gameDefinition = await ApiService.get<GameDefinitionInstance>(\n          `game_definition/${gameDefId}`,\n          { Model: GameDefinition }\n        )\n        setMultiplayerDameDef(gameDefinition)\n        const joinedMultiplayerGameTimestamp = new Date().getTime()\n        setActivePanel('lobby')\n        setGameType(gameDefinition.type)\n        multiplayerSocket.current = ApiService.openSocketConnection(\n          `multiplayer-game/${gameDefId}`,\n          {\n            joinedGame: joinedMultiplayerGame,\n            startedGame: ({ instance }: { instance: GameInstance }) =>\n              startedMultiplayerGame(\n                { instance },\n                joinedMultiplayerGameTimestamp\n              ),\n            finishedGame: finishedMultiplayerGame,\n          }\n        )\n      } catch (e) {\n        if (e.message === 'Страница не найдена.')\n          throw new Error('Игра для подключения не найдена')\n        else throw e\n      } finally {\n        setLoadingMultiplayerGameDef(false)\n      }\n    },\n    [\n      startedMultiplayerGame,\n      finishedMultiplayerGame,\n      joinedMultiplayerGame,\n      setMultiplayerDameDef,\n    ]\n  )\n\n  useEffect(() => {\n    if (!multiplayerEnabled) return\n    const joinGameDefId = URLUtils.getHashParam('gid')\n    if (joinGameDefId) {\n      joinMultiplayerGame(joinGameDefId)\n      setGameMode(GameModes.multi)\n    }\n  }, [joinMultiplayerGame, multiplayerEnabled])\n\n  const onFinishGame = async (localBattle: GameInstance) => {\n    const updatedBattle = await BattleService.getBattle(localBattle.id)\n    setBattle(updatedBattle)\n    setActivePanel('results')\n    trackers.reachGoal('finish-game')\n    VkPixelTracker.reachGoal('conversion')\n    refreshUser()\n  }\n\n  const goToHomePanel = () => setActivePanel('home')\n\n  const goToChooseGameTypePanel = (gameModeToSet: GameModes) => {\n    if (gameModeToSet !== gameMode) setGameMode(gameModeToSet)\n    setActivePanel('choose-game-type')\n  }\n\n  async function createMultiplayerGameDefinition(\n    gameDefType: GameType\n  ): Promise<GameDefinitionInstance> {\n    const createdGameDefinition = await ApiService.post<GameDefinitionInstance>(\n      'game_definition',\n      { type: gameDefType },\n      { Model: GameDefinition }\n    )\n    setMultiplayerDameDef(createdGameDefinition)\n    return createdGameDefinition\n  }\n\n  const startSinglePlayerGame = async (chosenGameType: GameType) => {\n    setLoadingSinglePlayerGame(true)\n    try {\n      const fetchedGame = await BattleService.startSinglePlayerGame(\n        chosenGameType\n      )\n      setGame(fetchedGame)\n    } finally {\n      setLoadingSinglePlayerGame(false)\n    }\n  }\n\n  const onStartGame = async (chosenGameType: GameType) => {\n    if (chosenGameType !== gameType) setGameType(chosenGameType)\n    if (gameMode === GameModes.single) {\n      await startSinglePlayerGame(chosenGameType)\n      setActivePanel('battle')\n    } else {\n      const gameDefPromise = createMultiplayerGameDefinition(chosenGameType)\n      setActivePanel('lobby')\n      const gameDef = await gameDefPromise\n      multiplayerSocket.current = ApiService.openSocketConnection(\n        `multiplayer-game/${gameDef.id}`,\n        {\n          joinedGame: ({ instance }: { instance: GameDefinitionInstance }) => {\n            joinedMultiplayerGame({ instance })\n            if (instance.players.length === 2) {\n              multiplayerSocket.current.sendEvent('start-game')\n              trackers.reachGoal('launch-multiplayer-game')\n            }\n          },\n          startedGame: startedMultiplayerGame,\n          finishedGame: finishedMultiplayerGame,\n        }\n      )\n    }\n    trackers.reachGoal('start-game', { type: chosenGameType, mode: gameMode })\n  }\n\n  const onOpenScoreboard = () => {\n    setActiveStory('scoreboard')\n    setActivePanel('scoreboard-home')\n  }\n\n  const loading =\n    loadingUser || loadingMultiplayerGameDef || loadingSinglePlayerGame\n\n  useEffect(() => {\n    let timerId: number\n    if (loading)\n      timerId = window.setTimeout(() => {\n        setLoadingTooLong(true)\n      }, DELAY_BEFORE_LOADER)\n    else setLoadingTooLong(false)\n    return () => {\n      clearTimeout(timerId)\n    }\n  }, [loading])\n\n  useEffect(() => {\n    if (gameMode === GameModes.multi && activeStory !== 'game') {\n      multiplayerSocket.current.close(frontendWebsocketCloseCodes.CLOSE_GAME)\n    }\n  }, [activeStory, multiplayerSocket, gameMode])\n\n  let popoutToRender: JSX.Element | null = null\n  if (popout) popoutToRender = popout\n  else if (loading && loadingTooLong) popoutToRender = <ScreenSpinner />\n\n  return (\n    <Epic\n      activeStory={activeStory}\n      tabbar={\n        <Tabbar>\n          <TabbarItem\n            text=\"Главная\"\n            selected={activeStory === 'game'}\n            onClick={() => {\n              setActiveStory('game')\n              setActivePanel('home')\n            }}\n          >\n            <Icon28HomeOutline />\n          </TabbarItem>\n          <TabbarItem\n            text=\"Рейтинг\"\n            selected={activeStory === 'scoreboard'}\n            onClick={onOpenScoreboard}\n          >\n            <Icon28UsersOutline />\n          </TabbarItem>\n        </Tabbar>\n      }\n    >\n      <View id=\"game\" activePanel={activePanel} popout={popoutToRender}>\n        <Panel id=\"home\">\n          <Home\n            user={user}\n            onStartSingleGame={() => goToChooseGameTypePanel(GameModes.single)}\n            onStartMultiplayerGame={() => {\n              setGameMode(GameModes.multi)\n              setActivePanel('choose-multiplayer-game-action')\n            }}\n            onUpdateUser={(updatedUser) => setUser(updatedUser)}\n          />\n        </Panel>\n        <Panel id=\"choose-multiplayer-game-action\">\n          <ChooseMultiplayerGameAction\n            onCreateNew={() => {\n              setActivePanel('choose-game-type')\n            }}\n            onJoin={() => {\n              setActivePanel('join-multiplayer-game')\n            }}\n            onGoBack={goToHomePanel}\n          />\n        </Panel>\n        <Panel id=\"choose-game-type\">\n          <ChooseGameType\n            onGoBack={() => {\n              if (gameMode === GameModes.multi)\n                setActivePanel('choose-multiplayer-game-action')\n              else goToHomePanel()\n            }}\n            onChoose={onStartGame}\n          />\n        </Panel>\n        <Panel id=\"join-multiplayer-game\">\n          <JoinMultiplayerGame\n            onJoin={(gameDefinitionId) => {\n              joinMultiplayerGame(gameDefinitionId)\n            }}\n            onBack={() => {\n              setActivePanel('choose-multiplayer-game-action')\n            }}\n          />\n        </Panel>\n        <Panel id=\"lobby\">\n          <Lobby\n            gameDefinition={multiplayerGameDef}\n            onGoBack={() => {\n              goToChooseGameTypePanel(gameMode)\n              multiplayerSocket.current.close(\n                frontendWebsocketCloseCodes.CLOSE_GAME\n              )\n            }}\n          />\n        </Panel>\n        <Panel id=\"battle\">\n          <Battle\n            onGoBack={() => {\n              goToChooseGameTypePanel(gameMode)\n              if (gameMode === GameModes.multi)\n                multiplayerSocket.current.close(\n                  frontendWebsocketCloseCodes.CLOSE_GAME\n                )\n            }}\n            onFinishGame={onFinishGame}\n            gameType={gameType}\n            gameMode={gameMode}\n            game={game}\n          />\n        </Panel>\n        <Panel id=\"results\">\n          {gameMode === GameModes.single && (\n            <SingleplayerResults\n              user={user}\n              onRetry={() => onStartGame(gameType)}\n              onGoBack={goToHomePanel}\n              battle={battle}\n              onUpdateUser={(updatedUser) => setUser(updatedUser)}\n            />\n          )}\n          {gameMode === GameModes.multi && (\n            <MultiplayerResults\n              onGoBack={() => {\n                goToHomePanel()\n                multiplayerSocket.current.close(\n                  frontendWebsocketCloseCodes.CLOSE_GAME\n                )\n              }}\n              items={multiplayerFinishedItems}\n              playersNumber={\n                (multiplayerGameDef && multiplayerGameDef.players.length) || 0\n              }\n            />\n          )}\n        </Panel>\n      </View>\n      <View id=\"scoreboard\" activePanel={activePanel} popout={popout}>\n        <Panel id=\"scoreboard-home\">\n          <ScoreboardHome user={user} />\n        </Panel>\n      </View>\n    </Epic>\n  )\n}\n\nexport default App\n","import { RefObject, useCallback, useRef, useState } from 'react'\n\n/**\n * Combines React's useState and useRef hooks\n * Causes re-render when value changes and allows to use value inside closures\n * See https://stackoverflow.com/a/63039797/7119080\n * @param {any} defaultValue\n */\nexport default function useStateRef<T>(\n  defaultValue: T\n): [T, (newValue: T) => void, RefObject<T>] {\n  const [state, setState] = useState(defaultValue)\n  const ref = useRef(defaultValue)\n  ref.current = state\n\n  const setValue = useCallback((newValue) => {\n    ref.current = newValue\n    setState(newValue)\n  }, [])\n\n  return [state, setValue, ref]\n}\n","export class FeatureFlagService {\n  static getDevFlagsFrom(params: string): Record<string, string> {\n    const result = {}\n    const searchParams = new URLSearchParams(params)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [key, value] of searchParams.entries()) {\n      if (key.startsWith('feature')) {\n        const featureFlagName = key.replace(/^feature_/, '')\n        result[featureFlagName] = value\n      }\n    }\n    return result\n  }\n\n  static getDevFeatureFlags(): Record<string, string> {\n    return {\n      ...FeatureFlagService.getDevFlagsFrom(window.location.search),\n      ...FeatureFlagService.getDevFlagsFrom(window.location.hash.slice(1)),\n    }\n  }\n}\n","import React from 'react'\nimport { SplitFactory } from '@splitsoftware/splitio-react'\nimport { UserInstance } from '../../user-model'\nimport SplitIO from '@splitsoftware/splitio/types/splitio'\nimport { Utils } from '../../../Utils'\nimport { FeatureFlagService } from '../../FeatureFlagService'\n\ntype Props = {\n  children: JSX.Element\n  user: UserInstance\n}\n\nconst SPLIT_KEY = process.env.REACT_APP_SPLIT_KEY\n\nfunction FeatureFlagProvider({ user, children }: Props): JSX.Element {\n  if (user === null) return children\n  const splitConfig: SplitIO.IBrowserSettings = {\n    core: {\n      authorizationKey: SPLIT_KEY,\n      key: String(user.vkId),\n    },\n  }\n  if (!Utils.isProductionMode) {\n    splitConfig.core.authorizationKey = 'localhost'\n    splitConfig.features = FeatureFlagService.getDevFeatureFlags()\n  }\n  return <SplitFactory config={splitConfig}>{children}</SplitFactory>\n}\n\nexport default FeatureFlagProvider\n","import React, { useEffect, useState } from 'react'\nimport WithUser from '../core/components/WithUser/WithUser'\nimport App from './App'\nimport { Utils } from '../Utils'\nimport * as Sentry from '@sentry/react'\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert'\nimport styles from './App.module.css'\nimport { trackers } from '../core/trackers/trackers'\nimport FeatureFlagProvider from '../core/components/FeatureFlagProvider/FeatureFlagProvider'\n\nfunction AppWrapper(): JSX.Element {\n  const [popout, setPopout] = useState<JSX.Element | null>(null)\n\n  useEffect(() => {\n    if (Utils.isProductionMode) {\n      Sentry.init({\n        dsn: process.env.REACT_APP_SENTRY_DSN,\n        beforeSend(event, hint) {\n          if (event.exception) {\n            const errorMessage =\n              hint &&\n              hint.originalException &&\n              hint.originalException instanceof Error &&\n              hint.originalException.message\n                ? hint.originalException.message\n                : ''\n            setPopout(\n              <Alert\n                actions={[\n                  {\n                    mode: 'default',\n                    title: 'ОК',\n                    autoclose: true,\n                  },\n                ]}\n                onClose={() => setPopout(null)}\n              >\n                <h2>Возникла ошибка =(</h2>\n                {errorMessage && (\n                  <p className={styles.errorMessage}>{errorMessage}</p>\n                )}\n                <p>Попробуй еще раз</p>\n              </Alert>\n            )\n          }\n          return event\n        },\n      })\n    }\n    trackers.init()\n    trackers.reachGoal('open app')\n  }, [])\n\n  return (\n    <WithUser>\n      {({ loadingUser, user, setUser, refreshUser }) => {\n        return (\n          <FeatureFlagProvider user={user}>\n            <App\n              user={user}\n              loadingUser={loadingUser}\n              setUser={setUser}\n              refreshUser={refreshUser}\n              popout={popout}\n            />\n          </FeatureFlagProvider>\n        )\n      }}\n    </WithUser>\n  )\n}\n\nexport default AppWrapper\n","import 'core-js/features/map'\nimport 'core-js/features/set'\nimport React from 'react'\nimport { render as renderReact } from 'react-dom'\nimport bridge from '@vkontakte/vk-bridge'\nimport { Utils } from './Utils'\nimport { ErrorBoundary } from './components/ErrorBoundary'\nimport AppWrapper from './components/AppWrapper'\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit')\n\nbridge.subscribe(({ detail: { type, data } }) => {\n  if (type === 'VKWebAppUpdateConfig') {\n    const schemeAttribute = document.createAttribute('scheme')\n    // @ts-ignore\n    schemeAttribute.value = data.scheme || 'client_light'\n    document.body.attributes.setNamedItem(schemeAttribute)\n  }\n})\n\nfunction render() {\n  renderReact(\n    <React.StrictMode>\n      <ErrorBoundary>\n        <AppWrapper />\n      </ErrorBoundary>\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n}\nrender()\n\nif (!Utils.isProductionMode) {\n  if (module.hot) {\n    module.hot.accept('./components/App', render)\n  }\n\n  import('./eruda')\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"MultiplayerResults_headerRow__y5pM1\",\"answersHeader\":\"MultiplayerResults_answersHeader__3NEgp\",\"nameHeader\":\"MultiplayerResults_nameHeader__Hh72X\",\"dataRowWrapper\":\"MultiplayerResults_dataRowWrapper__yZ66X\",\"dataRow\":\"MultiplayerResults_dataRow__2DcDp\",\"name\":\"MultiplayerResults_name__og7Wz\",\"answers\":\"MultiplayerResults_answers__Hnaj0\",\"loaderText\":\"MultiplayerResults_loaderText__2FoPw\",\"homeButtonWrapper\":\"MultiplayerResults_homeButtonWrapper__3ataf\"};"],"sourceRoot":""}